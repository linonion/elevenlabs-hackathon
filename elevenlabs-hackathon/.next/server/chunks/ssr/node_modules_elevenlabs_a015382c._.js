module.exports = {

"[project]/node_modules/elevenlabs/api/resources/history/types/HistoryGetAllRequestSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HistoryGetAllRequestSource = void 0;
exports.HistoryGetAllRequestSource = {
    Tts: "TTS",
    Sts: "STS"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/history/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/types/HistoryGetAllRequestSource.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/history/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/history/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/history/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization = void 0;
exports.BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization = void 0;
exports.BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization = void 0;
exports.BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization = void 0;
exports.BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponseAlignment.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponseNormalizedAlignment.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponseAlignment.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponseNormalizedAlignment.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/TextToSpeechStreamWithTimestampsResponse.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/types/TextToVoiceCreatePreviewsRequestOutputFormat.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextToVoiceCreatePreviewsRequestOutputFormat = void 0;
exports.TextToVoiceCreatePreviewsRequestOutputFormat = {
    Mp32205032: "mp3_22050_32",
    Mp34410032: "mp3_44100_32",
    Mp34410064: "mp3_44100_64",
    Mp34410096: "mp3_44100_96",
    Mp344100128: "mp3_44100_128",
    Mp344100192: "mp3_44100_192",
    Pcm8000: "pcm_8000",
    Pcm16000: "pcm_16000",
    Pcm22050: "pcm_22050",
    Pcm24000: "pcm_24000",
    Pcm44100: "pcm_44100",
    Ulaw8000: "ulaw_8000"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/types/TextToVoiceCreatePreviewsRequestOutputFormat.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSourceItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostQualityPreset.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyCreatePodcastV1StudioPodcastsPostQualityPreset = void 0;
exports.BodyCreatePodcastV1StudioPodcastsPostQualityPreset = {
    Standard: "standard",
    High: "high",
    Highest: "highest",
    Ultra: "ultra",
    UltraLossless: "ultra_lossless"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostDurationScale.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyCreatePodcastV1StudioPodcastsPostDurationScale = void 0;
exports.BodyCreatePodcastV1StudioPodcastsPostDurationScale = {
    Short: "short",
    Default: "default",
    Long: "long"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSourceItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostSource.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostQualityPreset.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/BodyCreatePodcastV1StudioPodcastsPostDurationScale.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestTargetAudience.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectsAddRequestTargetAudience = void 0;
exports.ProjectsAddRequestTargetAudience = {
    Children: "children",
    YoungAdult: "young adult",
    Adult: "adult",
    AllAges: "all ages"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestFiction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectsAddRequestFiction = void 0;
exports.ProjectsAddRequestFiction = {
    Fiction: "fiction",
    NonFiction: "non-fiction"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectsAddRequestApplyTextNormalization = void 0;
exports.ProjectsAddRequestApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off",
    ApplyEnglish: "apply_english"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestTargetAudience.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestFiction.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/ProjectsAddRequestApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.chapters = exports.projects = void 0;
exports.projects = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/types/index.js [app-rsc] (ecmascript)"), exports);
exports.chapters = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset = void 0;
exports.BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset = {
    Standard: "standard",
    High: "high",
    Highest: "highest",
    Ultra: "ultra",
    UltraLossless: "ultra_lossless"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale = void 0;
exports.BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale = {
    Short: "short",
    Default: "default",
    Long: "long"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestTargetAudience.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddProjectV1ProjectsAddPostRequestTargetAudience = void 0;
exports.AddProjectV1ProjectsAddPostRequestTargetAudience = {
    Children: "children",
    YoungAdult: "young adult",
    Adult: "adult",
    AllAges: "all ages"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestFiction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddProjectV1ProjectsAddPostRequestFiction = void 0;
exports.AddProjectV1ProjectsAddPostRequestFiction = {
    Fiction: "fiction",
    NonFiction: "non-fiction"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AddProjectV1ProjectsAddPostRequestApplyTextNormalization = void 0;
exports.AddProjectV1ProjectsAddPostRequestApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off",
    ApplyEnglish: "apply_english"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSourceItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostSource.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestTargetAudience.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestFiction.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/AddProjectV1ProjectsAddPostRequestApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/types/DubbingGetTranscriptForDubRequestFormatType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DubbingGetTranscriptForDubRequestFormatType = void 0;
exports.DubbingGetTranscriptForDubRequestFormatType = {
    Srt: "srt",
    Webvtt: "webvtt"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/types/DubbingGetTranscriptForDubRequestFormatType.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryAddFromFileRequestWorkspaceAccess.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PronunciationDictionaryAddFromFileRequestWorkspaceAccess = void 0;
exports.PronunciationDictionaryAddFromFileRequestWorkspaceAccess = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryRule.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryAddFromFileRequestWorkspaceAccess.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/PronunciationDictionaryRule.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/types/BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole = void 0;
exports.BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole = {
    WorkspaceAdmin: "workspace_admin",
    WorkspaceMember: "workspace_member"
};
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/types/BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/types/BodyPatchesAnAgentSettingsV1ConvaiAgentsAgentIdPatchSecretsItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/types/BodyPatchesAnAgentSettingsV1ConvaiAgentsAgentIdPatchSecretsItem.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/audioIsolation/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/samples/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/samples/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/samples/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToSpeech/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/voiceGeneration/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/user/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/user/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/user/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/voices/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/voices/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voices/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/voices/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voices/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/models/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/models/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/models/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/audioNative/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/audioNative/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioNative/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/audioNative/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioNative/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/usage/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/usage/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/usage/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/usage/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/usage/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToText/client/requests/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToText/client/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToText/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToText/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToText/client/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.speechToText = exports.usage = exports.audioNative = exports.models = exports.voices = exports.user = exports.voiceGeneration = exports.speechToSpeech = exports.samples = exports.audioIsolation = exports.textToSoundEffects = exports.conversationalAi = exports.workspace = exports.pronunciationDictionary = exports.dubbing = exports.projects = exports.studio = exports.textToVoice = exports.textToSpeech = exports.history = void 0;
exports.history = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/types/index.js [app-rsc] (ecmascript)"), exports);
exports.textToSpeech = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/types/index.js [app-rsc] (ecmascript)"), exports);
exports.textToVoice = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/types/index.js [app-rsc] (ecmascript)"), exports);
exports.studio = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/types/index.js [app-rsc] (ecmascript)"), exports);
exports.projects = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/types/index.js [app-rsc] (ecmascript)"), exports);
exports.dubbing = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/types/index.js [app-rsc] (ecmascript)"), exports);
exports.pronunciationDictionary = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/types/index.js [app-rsc] (ecmascript)"), exports);
exports.workspace = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/types/index.js [app-rsc] (ecmascript)"), exports);
exports.conversationalAi = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/types/index.js [app-rsc] (ecmascript)"), exports);
exports.textToSoundEffects = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/index.js [app-rsc] (ecmascript)"));
exports.audioIsolation = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioIsolation/index.js [app-rsc] (ecmascript)"));
exports.samples = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/samples/index.js [app-rsc] (ecmascript)"));
exports.speechToSpeech = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToSpeech/index.js [app-rsc] (ecmascript)"));
exports.voiceGeneration = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voiceGeneration/index.js [app-rsc] (ecmascript)"));
exports.user = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/user/index.js [app-rsc] (ecmascript)"));
exports.voices = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voices/index.js [app-rsc] (ecmascript)"));
exports.models = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/models/index.js [app-rsc] (ecmascript)"));
exports.audioNative = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioNative/index.js [app-rsc] (ecmascript)"));
exports.usage = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/usage/index.js [app-rsc] (ecmascript)"));
exports.speechToText = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToText/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voices/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioNative/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/usage/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToText/client/requests/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/requests/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/types/AsrConversationalConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AsrInputFormat.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AsrInputFormat = void 0;
exports.AsrInputFormat = {
    Pcm8000: "pcm_8000",
    Pcm16000: "pcm_16000",
    Pcm22050: "pcm_22050",
    Pcm24000: "pcm_24000",
    Pcm44100: "pcm_44100",
    Ulaw8000: "ulaw_8000"
};
}}),
"[project]/node_modules/elevenlabs/api/types/AsrProvider.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AsrQuality.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddAgentSecretResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddChapterResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddKnowledgeBaseResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddProjectResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddPronunciationDictionaryRulesResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddVoiceIvcResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AddVoiceResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentBan.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentCallLimits.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentConfigOverride.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentConfigOverrideConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentMetadataResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentPlatformSettings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AgentSummaryResponseModelAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AgentSummaryResponseModelAccessLevel = void 0;
exports.AgentSummaryResponseModelAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/AgentSummaryResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AllowlistItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyItems.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ArrayJsonSchemaProperty.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AudioNativeCreateProjectResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AudioNativeEditContentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AuthSettings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/AuthorizationMethod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthorizationMethod = void 0;
exports.AuthorizationMethod = {
    Public: "public",
    AuthorizationHeader: "authorization_header",
    SignedUrl: "signed_url",
    ShareableLink: "shareable_link"
};
}}),
"[project]/node_modules/elevenlabs/api/types/BanReasonType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BanReasonType = void 0;
exports.BanReasonType = {
    Safety: "safety",
    Manual: "manual"
};
}}),
"[project]/node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/BreakdownTypes.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BreakdownTypes = void 0;
exports.BreakdownTypes = {
    None: "none",
    Voice: "voice",
    VoiceMultiplier: "voice_multiplier",
    User: "user",
    Groups: "groups",
    ApiKeys: "api_keys",
    AllApiKeys: "all_api_keys",
    ProductType: "product_type",
    Model: "model",
    Resource: "resource"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentBlockExtendableNodeResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentBlockInputModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentBlockResponseModelNodesItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentBlockResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentBlockTtsNodeResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentInputModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentParagraphTtsNodeInputModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterContentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterState.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChapterState = void 0;
exports.ChapterState = {
    Default: "default",
    Converting: "converting"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterSnapshotResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterSnapshotsResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterStatisticsResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterWithContentResponseModelState.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChapterWithContentResponseModelState = void 0;
exports.ChapterWithContentResponseModelState = {
    Default: "default",
    Converting: "converting"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ChapterWithContentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ClientEvent.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ClientEvent = void 0;
exports.ClientEvent = {
    ConversationInitiationMetadata: "conversation_initiation_metadata",
    AsrInitiationMetadata: "asr_initiation_metadata",
    Ping: "ping",
    Audio: "audio",
    Interruption: "interruption",
    UserTranscript: "user_transcript",
    AgentResponse: "agent_response",
    AgentResponseCorrection: "agent_response_correction",
    ClientToolCall: "client_tool_call",
    InternalVadScore: "internal_vad_score",
    InternalTurnProbability: "internal_turn_probability",
    InternalTentativeAgentResponse: "internal_tentative_agent_response"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ClientToolConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConvAiNewSecretConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConvAiSecretLocator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConvAiStoredSecretConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationChargingCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationConfigClientOverride.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationDeletionSettings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryAnalysisCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryEvaluationCriteriaResultCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryFeedbackCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelRole.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationHistoryTranscriptCommonModelRole = void 0;
exports.ConversationHistoryTranscriptCommonModelRole = {
    User: "user",
    Agent: "agent"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolResultCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientDataDynamicVariablesValue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientData.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationSignedUrlResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationSummaryResponseModelStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationSummaryResponseModelStatus = void 0;
exports.ConversationSummaryResponseModelStatus = {
    Processing: "processing",
    Done: "done"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationSummaryResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationTokenDbModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationTokenPurpose.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationTokenPurpose = void 0;
exports.ConversationTokenPurpose = {
    SignedUrl: "signed_url",
    ShareableLink: "shareable_link"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ConversationalConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/CreateAgentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/CreatePhoneNumberResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/CustomLlm.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DataCollectionResultCommonModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifierAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DependentAvailableAgentIdentifierAccessLevel = void 0;
exports.DependentAvailableAgentIdentifierAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifier.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DependentUnknownAgentIdentifier.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DoDubbingResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DubbingMediaMetadata.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DubbingMetadataResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DynamicVariablesConfigDynamicVariablePlaceholdersValue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/DynamicVariablesConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/EditChapterResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/EditProjectResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/EmbedVariant.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EmbedVariant = void 0;
exports.EmbedVariant = {
    Compact: "compact",
    Full: "full",
    Expandable: "expandable"
};
}}),
"[project]/node_modules/elevenlabs/api/types/EvaluationSettings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/EvaluationSuccessResult.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EvaluationSuccessResult = void 0;
exports.EvaluationSuccessResult = {
    Success: "success",
    Failure: "failure",
    Unknown: "unknown"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCurrency.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExtendedSubscriptionResponseModelCurrency = void 0;
exports.ExtendedSubscriptionResponseModelCurrency = {
    Usd: "usd",
    Eur: "eur"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SubscriptionStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubscriptionStatus = void 0;
exports.SubscriptionStatus = {
    Trialing: "trialing",
    Active: "active",
    Incomplete: "incomplete",
    IncompleteExpired: "incomplete_expired",
    PastDue: "past_due",
    Canceled: "canceled",
    Unpaid: "unpaid",
    Free: "free"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelBillingPeriod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExtendedSubscriptionResponseModelBillingPeriod = void 0;
exports.ExtendedSubscriptionResponseModelBillingPeriod = {
    MonthlyPeriod: "monthly_period",
    AnnualPeriod: "annual_period"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCharacterRefreshPeriod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ExtendedSubscriptionResponseModelCharacterRefreshPeriod = void 0;
exports.ExtendedSubscriptionResponseModelCharacterRefreshPeriod = {
    MonthlyPeriod: "monthly_period",
    AnnualPeriod: "annual_period"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Subscription.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/FeedbackItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/FineTuningResponseModelStateValue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FineTuningResponseModelStateValue = void 0;
exports.FineTuningResponseModelStateValue = {
    NotStarted: "not_started",
    Queued: "queued",
    FineTuning: "fine_tuning",
    FineTuned: "fine_tuned",
    Failed: "failed",
    Delayed: "delayed"
};
}}),
"[project]/node_modules/elevenlabs/api/types/FineTuningResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetAgentEmbedResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetAgentLinkResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetAgentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetAgentsPageResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetChaptersResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetConversationResponseModelStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetConversationResponseModelStatus = void 0;
exports.GetConversationResponseModelStatus = {
    Processing: "processing",
    Done: "done"
};
}}),
"[project]/node_modules/elevenlabs/api/types/GetConversationResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetConversationsPageResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModelAgentsItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModelType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetKnowledgeBaseResponseModelType = void 0;
exports.GetKnowledgeBaseResponseModelType = {
    File: "file",
    Url: "url"
};
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModelAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetKnowledgeBaseResponseModelAccessLevel = void 0;
exports.GetKnowledgeBaseResponseModelAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetKnowledgeBaseSummaryResponseModelType = void 0;
exports.GetKnowledgeBaseSummaryResponseModelType = {
    File: "file",
    Url: "url"
};
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelDependentAgentsItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GetKnowledgeBaseSummaryResponseModelAccessLevel = void 0;
exports.GetKnowledgeBaseSummaryResponseModelAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetLibraryVoicesResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetPhoneNumberResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetProjectsResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetPronunciationDictionariesMetadataResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetSpeechHistoryResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/GetVoicesResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/HttpValidationError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/HistoryAlignmentResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/HistoryAlignmentsResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ImageAvatar.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/Invoice.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/KnowledgeBaseLocatorType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.KnowledgeBaseLocatorType = void 0;
exports.KnowledgeBaseLocatorType = {
    File: "file",
    Url: "url"
};
}}),
"[project]/node_modules/elevenlabs/api/types/KnowledgeBaseLocator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/Llm.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Llm = void 0;
exports.Llm = {
    Gpt4OMini: "gpt-4o-mini",
    Gpt4O: "gpt-4o",
    Gpt4: "gpt-4",
    Gpt4Turbo: "gpt-4-turbo",
    Gpt35Turbo: "gpt-3.5-turbo",
    Gemini15Pro: "gemini-1.5-pro",
    Gemini15Flash: "gemini-1.5-flash",
    Gemini20Flash001: "gemini-2.0-flash-001",
    Gemini10Pro: "gemini-1.0-pro",
    Claude35Sonnet: "claude-3-5-sonnet",
    Claude3Haiku: "claude-3-haiku",
    GrokBeta: "grok-beta",
    CustomLlm: "custom-llm"
};
}}),
"[project]/node_modules/elevenlabs/api/types/LanguagePreset.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/LanguagePresetTranslation.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/LanguageResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/LibraryVoiceResponseModelCategory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LibraryVoiceResponseModelCategory = void 0;
exports.LibraryVoiceResponseModelCategory = {
    Generated: "generated",
    Cloned: "cloned",
    Premade: "premade",
    Professional: "professional",
    Famous: "famous",
    HighQuality: "high_quality"
};
}}),
"[project]/node_modules/elevenlabs/api/types/LibraryVoiceResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LiteralJsonSchemaPropertyType = void 0;
exports.LiteralJsonSchemaPropertyType = {
    Boolean: "boolean",
    String: "string",
    Integer: "integer",
    Number: "number"
};
}}),
"[project]/node_modules/elevenlabs/api/types/LiteralJsonSchemaProperty.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ManualVerificationFileResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ManualVerificationResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ModelRatesResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ModelResponseModelConcurrencyGroup.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModelResponseModelConcurrencyGroup = void 0;
exports.ModelResponseModelConcurrencyGroup = {
    Standard: "standard",
    Turbo: "turbo"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Model.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModelSafetyStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModerationStatusResponseModelSafetyStatus = void 0;
exports.ModerationStatusResponseModelSafetyStatus = {
    AppealApproved: "appeal_approved",
    AppealDenied: "appeal_denied",
    FalsePositive: "false_positive"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModelWarningStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModerationStatusResponseModelWarningStatus = void 0;
exports.ModerationStatusResponseModelWarningStatus = {
    Warning: "warning",
    WarningCleared: "warning_cleared"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyPropertiesValue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ObjectJsonSchemaProperty.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/OrbAvatar.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PhoneNumberAgentInfo.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastBulletinMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastBulletinModeData.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastConversationMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastConversationModeData.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastProjectResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastTextSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PodcastUrlSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PostAgentAvatarResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PrivacyConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProfilePageResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectCreationMetaResponseModelStatus = void 0;
exports.ProjectCreationMetaResponseModelStatus = {
    Pending: "pending",
    Creating: "creating",
    Finished: "finished",
    Failed: "failed"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectCreationMetaResponseModelType = void 0;
exports.ProjectCreationMetaResponseModelType = {
    Blank: "blank",
    GeneratePodcast: "generate_podcast",
    AutoAssignVoices: "auto_assign_voices"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelTargetAudience.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectExtendedResponseModelTargetAudience = void 0;
exports.ProjectExtendedResponseModelTargetAudience = {
    Children: "children",
    YoungAdult: "young adult",
    Adult: "adult",
    AllAges: "all ages"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectState.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectState = void 0;
exports.ProjectState = {
    Creating: "creating",
    Default: "default",
    Converting: "converting",
    InQueue: "in_queue"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectExtendedResponseModelAccessLevel = void 0;
exports.ProjectExtendedResponseModelAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelFiction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectExtendedResponseModelFiction = void 0;
exports.ProjectExtendedResponseModelFiction = {
    Fiction: "fiction",
    NonFiction: "non-fiction"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelQualityPreset.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectExtendedResponseModelQualityPreset = void 0;
exports.ProjectExtendedResponseModelQualityPreset = {
    Standard: "standard",
    High: "high",
    Highest: "highest",
    Ultra: "ultra",
    UltraLossless: "ultra_lossless"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelApplyTextNormalization.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectExtendedResponseModelApplyTextNormalization = void 0;
exports.ProjectExtendedResponseModelApplyTextNormalization = {
    Auto: "auto",
    On: "on",
    Off: "off",
    ApplyEnglish: "apply_english"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectResponseModelTargetAudience.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectResponseModelTargetAudience = void 0;
exports.ProjectResponseModelTargetAudience = {
    Children: "children",
    YoungAdult: "young adult",
    Adult: "adult",
    AllAges: "all ages"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectResponseModelAccessLevel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectResponseModelAccessLevel = void 0;
exports.ProjectResponseModelAccessLevel = {
    Admin: "admin",
    Editor: "editor",
    Viewer: "viewer"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectResponseModelFiction.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectResponseModelFiction = void 0;
exports.ProjectResponseModelFiction = {
    Fiction: "fiction",
    NonFiction: "non-fiction"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectSnapshotResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectSnapshotUploadResponseModelStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProjectSnapshotUploadResponseModelStatus = void 0;
exports.ProjectSnapshotUploadResponseModelStatus = {
    Success: "success",
    InQueue: "in_queue",
    Pending: "pending",
    Failed: "failed"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectSnapshotUploadResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ProjectSnapshotsResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PromptAgentToolsItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PromptAgent.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PromptAgentOverride.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PromptAgentOverrideConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PromptEvaluationCriteria.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryAliasRuleRequestModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryPhonemeRuleRequestModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/PydanticPronunciationDictionaryVersionLocator.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/QueryParamsJsonSchema.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ReaderResourceResponseModelResourceType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ReaderResourceResponseModelResourceType = void 0;
exports.ReaderResourceResponseModelResourceType = {
    Read: "read",
    Collection: "collection"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ReaderResourceResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/RecordingResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/RemovePronunciationDictionaryRulesResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/Safety.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SafetyEvaluation.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SafetyRule.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SafetyRule = void 0;
exports.SafetyRule = {
    SexualMinors: "sexual_minors",
    ForgetModeration: "forget_moderation",
    Extremism: "extremism",
    ScamFraud: "scam_fraud",
    Political: "political",
    SelfHarm: "self_harm",
    IllegalDistributionMedical: "illegal_distribution_medical",
    SexualAdults: "sexual_adults",
    Unknown: "unknown"
};
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSample.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelVoiceCategory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SpeechHistoryItemResponseModelVoiceCategory = void 0;
exports.SpeechHistoryItemResponseModelVoiceCategory = {
    Premade: "premade",
    Cloned: "cloned",
    Generated: "generated",
    Professional: "professional"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelSource.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SpeechHistoryItemResponseModelSource = void 0;
exports.SpeechHistoryItemResponseModelSource = {
    Tts: "TTS",
    Sts: "STS"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechToTextChunkResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechToTextStreamResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechToTextWordResponseModelType.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SpeechToTextWordResponseModelType = void 0;
exports.SpeechToTextWordResponseModelType = {
    Word: "word",
    Spacing: "spacing",
    AudioEvent: "audio_event"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SpeechToTextWordResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelCurrency.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubscriptionResponseModelCurrency = void 0;
exports.SubscriptionResponseModelCurrency = {
    Usd: "usd",
    Eur: "eur"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelBillingPeriod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubscriptionResponseModelBillingPeriod = void 0;
exports.SubscriptionResponseModelBillingPeriod = {
    MonthlyPeriod: "monthly_period",
    AnnualPeriod: "annual_period"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelCharacterRefreshPeriod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SubscriptionResponseModelCharacterRefreshPeriod = void 0;
exports.SubscriptionResponseModelCharacterRefreshPeriod = {
    MonthlyPeriod: "monthly_period",
    AnnualPeriod: "annual_period"
};
}}),
"[project]/node_modules/elevenlabs/api/types/SubscriptionResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/SystemToolConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TtsConversationalConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TtsConversationalConfigOverride.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TtsConversationalConfigOverrideConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TtsConversationalModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TtsConversationalModel = void 0;
exports.TtsConversationalModel = {
    ElevenTurboV2: "eleven_turbo_v2",
    ElevenTurboV25: "eleven_turbo_v2_5",
    ElevenFlashV2: "eleven_flash_v2",
    ElevenFlashV25: "eleven_flash_v2_5"
};
}}),
"[project]/node_modules/elevenlabs/api/types/TtsOptimizeStreamingLatency.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TtsOutputFormat.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TtsOutputFormat = void 0;
exports.TtsOutputFormat = {
    Pcm8000: "pcm_8000",
    Pcm16000: "pcm_16000",
    Pcm22050: "pcm_22050",
    Pcm24000: "pcm_24000",
    Pcm44100: "pcm_44100",
    Ulaw8000: "ulaw_8000"
};
}}),
"[project]/node_modules/elevenlabs/api/types/TelephonyProvider.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolRequestModelToolConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolRequestModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolResponseModelToolConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolResponseModelDependentAgentsItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ToolsResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TurnConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/TurnMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TurnMode = void 0;
exports.TurnMode = {
    Silence: "silence",
    Turn: "turn"
};
}}),
"[project]/node_modules/elevenlabs/api/types/UrlAvatar.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/UsageCharactersResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/UserFeedback.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/UserFeedbackScore.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UserFeedbackScore = void 0;
exports.UserFeedbackScore = {
    Like: "like",
    Dislike: "dislike"
};
}}),
"[project]/node_modules/elevenlabs/api/types/User.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ValidationErrorLocItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/ValidationError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VerificationAttemptResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceGenerationParameterOptionResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceGenerationParameterResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoicePreviewResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoicePreviewsResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceResponseModelCategory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoiceResponseModelCategory = void 0;
exports.VoiceResponseModelCategory = {
    Generated: "generated",
    Cloned: "cloned",
    Premade: "premade",
    Professional: "professional",
    Famous: "famous",
    HighQuality: "high_quality"
};
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceResponseModelSafetyControl.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoiceResponseModelSafetyControl = void 0;
exports.VoiceResponseModelSafetyControl = {
    None: "NONE",
    Ban: "BAN",
    Captcha: "CAPTCHA",
    CaptchaAndModeration: "CAPTCHA_AND_MODERATION",
    EnterpriseBan: "ENTERPRISE_BAN",
    EnterpriseCaptcha: "ENTERPRISE_CAPTCHA"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Voice.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSettings.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSharingModerationCheckResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSharingState.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoiceSharingState = void 0;
exports.VoiceSharingState = {
    Enabled: "enabled",
    Disabled: "disabled",
    Copied: "copied",
    CopiedDisabled: "copied_disabled"
};
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSharingResponseModelCategory.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoiceSharingResponseModelCategory = void 0;
exports.VoiceSharingResponseModelCategory = {
    Generated: "generated",
    Professional: "professional",
    HighQuality: "high_quality",
    Famous: "famous"
};
}}),
"[project]/node_modules/elevenlabs/api/types/ReviewStatus.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ReviewStatus = void 0;
exports.ReviewStatus = {
    NotRequested: "not_requested",
    Pending: "pending",
    Declined: "declined",
    Allowed: "allowed",
    AllowedWithChanges: "allowed_with_changes"
};
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceSharingResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/VoiceVerificationResponse.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigMethod.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WebhookToolApiSchemaConfigMethod = void 0;
exports.WebhookToolApiSchemaConfigMethod = {
    Get: "GET",
    Post: "POST",
    Patch: "PATCH",
    Delete: "DELETE"
};
}}),
"[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigRequestHeadersValue.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WebhookToolConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WidgetConfigAvatar.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WidgetConfig.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WidgetConfigResponseModelAvatar.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WidgetConfigResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/WidgetFeedbackMode.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WidgetFeedbackMode = void 0;
exports.WidgetFeedbackMode = {
    None: "none",
    During: "during",
    End: "end"
};
}}),
"[project]/node_modules/elevenlabs/api/types/WorkspaceGroupByNameResponseModel.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/OutputFormat.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OutputFormat = void 0;
exports.OutputFormat = {
    Mp32205032: "mp3_22050_32",
    Mp34410032: "mp3_44100_32",
    Mp34410064: "mp3_44100_64",
    Mp34410096: "mp3_44100_96",
    Mp344100128: "mp3_44100_128",
    Mp344100192: "mp3_44100_192",
    Pcm16000: "pcm_16000",
    Pcm22050: "pcm_22050",
    Pcm24000: "pcm_24000",
    Pcm44100: "pcm_44100",
    Ulaw8000: "ulaw_8000"
};
}}),
"[project]/node_modules/elevenlabs/api/types/HistoryItem.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/Accent.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Accent = void 0;
exports.Accent = {
    British: "british",
    American: "american",
    African: "african",
    Australian: "australian",
    Indian: "indian"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Age.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Age = void 0;
exports.Age = {
    Young: "young",
    MiddleAged: "middle_aged",
    Old: "old"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Gender.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Gender = void 0;
exports.Gender = {
    Male: "male",
    Female: "female"
};
}}),
"[project]/node_modules/elevenlabs/api/types/Currency.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Currency = void 0;
exports.Currency = {
    Usd: "usd",
    Eur: "eur"
};
}}),
"[project]/node_modules/elevenlabs/api/types/TextToSpeechAsStreamRequest.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
}}),
"[project]/node_modules/elevenlabs/api/types/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AsrConversationalConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AsrInputFormat.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AsrProvider.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AsrQuality.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddAgentSecretResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddChapterResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddKnowledgeBaseResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddProjectResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddPronunciationDictionaryResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddPronunciationDictionaryRulesResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddVoiceIvcResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AddVoiceResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentBan.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentCallLimits.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentConfigOverride.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentConfigOverrideConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentMetadataResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentPlatformSettings.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentSummaryResponseModelAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AgentSummaryResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AllowlistItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ArrayJsonSchemaPropertyItems.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ArrayJsonSchemaProperty.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AudioNativeCreateProjectResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AudioNativeEditContentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AuthSettings.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/AuthorizationMethod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/BanReasonType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAddToKnowledgeBasePost.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/BodyAddToKnowledgeBaseV1ConvaiAgentsAgentIdAddToKnowledgeBasePost.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/BreakdownTypes.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentBlockExtendableNodeResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentBlockInputModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentBlockResponseModelNodesItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentBlockResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentBlockTtsNodeResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentInputModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentParagraphTtsNodeInputModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterContentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterState.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterSnapshotResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterSnapshotsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterStatisticsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterWithContentResponseModelState.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ChapterWithContentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ClientEvent.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ClientToolConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConvAiNewSecretConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConvAiSecretLocator.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConvAiStoredSecretConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationChargingCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationConfigClientOverride.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationConfigClientOverrideConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationDeletionSettings.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryAnalysisCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryEvaluationCriteriaResultCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryFeedbackCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryMetadataCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModelRole.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolCallCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationHistoryTranscriptToolResultCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientDataDynamicVariablesValue.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationInitiationClientDataConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationSignedUrlResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationSummaryResponseModelStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationSummaryResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationTokenDbModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationTokenPurpose.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ConversationalConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/CreateAgentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/CreatePhoneNumberResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/CustomLlm.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DataCollectionResultCommonModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifierAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DependentAvailableAgentIdentifier.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DependentUnknownAgentIdentifier.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DoDubbingResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DubbingMediaMetadata.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DubbingMetadataResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DynamicVariablesConfigDynamicVariablePlaceholdersValue.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/DynamicVariablesConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/EditChapterResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/EditProjectResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/EmbedVariant.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/EvaluationSettings.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/EvaluationSuccessResult.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCurrency.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SubscriptionStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelBillingPeriod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ExtendedSubscriptionResponseModelCharacterRefreshPeriod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Subscription.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/FeedbackItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/FineTuningResponseModelStateValue.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/FineTuningResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetAgentEmbedResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetAgentLinkResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetAgentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetAgentsPageResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetChaptersResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetConversationResponseModelStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetConversationResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetConversationsPageResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModelAgentsItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseDependentAgentsResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseListResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModelType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModelAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelDependentAgentsItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModelAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetKnowledgeBaseSummaryResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetLibraryVoicesResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetPhoneNumberResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetProjectsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetPronunciationDictionariesMetadataResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetPronunciationDictionaryMetadataResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetSpeechHistoryResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/GetVoicesResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/HttpValidationError.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/HistoryAlignmentResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/HistoryAlignmentsResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ImageAvatar.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Invoice.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/KnowledgeBaseLocatorType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/KnowledgeBaseLocator.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Llm.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LanguagePreset.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LanguagePresetTranslation.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LanguageResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LibraryVoiceResponseModelCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LibraryVoiceResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LiteralJsonSchemaPropertyType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/LiteralJsonSchemaProperty.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ManualVerificationFileResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ManualVerificationResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ModelRatesResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ModelResponseModelConcurrencyGroup.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Model.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModelSafetyStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModelWarningStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ModerationStatusResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ObjectJsonSchemaPropertyPropertiesValue.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ObjectJsonSchemaProperty.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/OrbAvatar.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PhoneNumberAgentInfo.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastBulletinMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastBulletinModeData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastConversationMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastConversationModeData.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastProjectResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastTextSource.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PodcastUrlSource.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PostAgentAvatarResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PrivacyConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProfilePageResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModelType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectCreationMetaResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelTargetAudience.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectState.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelFiction.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelQualityPreset.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModelApplyTextNormalization.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectExtendedResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectResponseModelTargetAudience.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectResponseModelAccessLevel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectResponseModelFiction.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectSnapshotResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectSnapshotUploadResponseModelStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectSnapshotUploadResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ProjectSnapshotsResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PromptAgentToolsItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PromptAgent.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PromptAgentOverride.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PromptAgentOverrideConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PromptEvaluationCriteria.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryAliasRuleRequestModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryPhonemeRuleRequestModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryVersionLocator.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PronunciationDictionaryVersionResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/PydanticPronunciationDictionaryVersionLocator.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/QueryParamsJsonSchema.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ReaderResourceResponseModelResourceType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ReaderResourceResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/RecordingResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/RemovePronunciationDictionaryRulesResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Safety.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SafetyEvaluation.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SafetyRule.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSample.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelVoiceCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponseModelSource.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechHistoryItemResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechToTextChunkResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechToTextStreamResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechToTextWordResponseModelType.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SpeechToTextWordResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelCurrency.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelBillingPeriod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SubscriptionResponseModelCharacterRefreshPeriod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SubscriptionResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/SystemToolConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsConversationalConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsConversationalConfigOverride.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsConversationalConfigOverrideConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsConversationalModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsOptimizeStreamingLatency.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TtsOutputFormat.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TelephonyProvider.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolRequestModelToolConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolRequestModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolResponseModelToolConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolResponseModelDependentAgentsItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ToolsResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TurnConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TurnMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/UrlAvatar.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/UsageCharactersResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/UserFeedback.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/UserFeedbackScore.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/User.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ValidationErrorLocItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ValidationError.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VerificationAttemptResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceGenerationParameterOptionResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceGenerationParameterResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoicePreviewResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoicePreviewsResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceResponseModelCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceResponseModelSafetyControl.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Voice.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSettings.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSharingModerationCheckResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSharingState.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSharingResponseModelCategory.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/ReviewStatus.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceSharingResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/VoiceVerificationResponse.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigMethod.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfigRequestHeadersValue.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WebhookToolApiSchemaConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WebhookToolConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WidgetConfigAvatar.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WidgetConfig.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WidgetConfigResponseModelAvatar.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WidgetConfigResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WidgetFeedbackMode.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/WorkspaceGroupByNameResponseModel.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/OutputFormat.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/HistoryItem.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Accent.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Age.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Gender.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/Currency.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/TextToSpeechAsStreamRequest.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/core/json.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.toJson = void 0;
exports.fromJson = fromJson;
/**
 * Serialize a value to JSON
 * @param value A JavaScript value, usually an object or array, to be converted.
 * @param replacer A function that transforms the results.
 * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
 * @returns JSON string
 */ const toJson = (value, replacer, space)=>{
    return JSON.stringify(value, replacer, space);
};
exports.toJson = toJson;
/**
 * Parse JSON string to object, array, or other type
 * @param text A valid JSON string.
 * @param reviver A function that transforms the results. This function is called for each member of the object. If a member contains nested objects, the nested objects are transformed before the parent object is.
 * @returns Parsed object, array, or other type
 */ function fromJson(text, reviver) {
    return JSON.parse(text, reviver);
}
}}),
"[project]/node_modules/elevenlabs/errors/ElevenLabsError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsError = void 0;
const json_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/json.js [app-rsc] (ecmascript)");
class ElevenLabsError extends Error {
    constructor({ message, statusCode, body }){
        super(buildMessage({
            message,
            statusCode,
            body
        }));
        Object.setPrototypeOf(this, ElevenLabsError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }
        if (body !== undefined) {
            this.body = body;
        }
    }
}
exports.ElevenLabsError = ElevenLabsError;
function buildMessage({ message, statusCode, body }) {
    let lines = [];
    if (message != null) {
        lines.push(message);
    }
    if (statusCode != null) {
        lines.push(`Status code: ${statusCode.toString()}`);
    }
    if (body != null) {
        lines.push(`Body: ${(0, json_1.toJson)(body, undefined, 2)}`);
    }
    return lines.join("\n");
}
}}),
"[project]/node_modules/elevenlabs/errors/ElevenLabsTimeoutError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsTimeoutError = void 0;
class ElevenLabsTimeoutError extends Error {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, ElevenLabsTimeoutError.prototype);
    }
}
exports.ElevenLabsTimeoutError = ElevenLabsTimeoutError;
}}),
"[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsTimeoutError = exports.ElevenLabsError = void 0;
var ElevenLabsError_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/errors/ElevenLabsError.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ElevenLabsError", {
    enumerable: true,
    get: function() {
        return ElevenLabsError_1.ElevenLabsError;
    }
});
var ElevenLabsTimeoutError_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/errors/ElevenLabsTimeoutError.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ElevenLabsTimeoutError", {
    enumerable: true,
    get: function() {
        return ElevenLabsTimeoutError_1.ElevenLabsTimeoutError;
    }
});
}}),
"[project]/node_modules/elevenlabs/api/errors/UnprocessableEntityError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UnprocessableEntityError = void 0;
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class UnprocessableEntityError extends errors.ElevenLabsError {
    constructor(body){
        super({
            message: "UnprocessableEntityError",
            statusCode: 422,
            body: body
        });
        Object.setPrototypeOf(this, UnprocessableEntityError.prototype);
    }
}
exports.UnprocessableEntityError = UnprocessableEntityError;
}}),
"[project]/node_modules/elevenlabs/api/errors/BadRequestError.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BadRequestError = void 0;
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class BadRequestError extends errors.ElevenLabsError {
    constructor(body){
        super({
            message: "BadRequestError",
            statusCode: 400,
            body: body
        });
        Object.setPrototypeOf(this, BadRequestError.prototype);
    }
}
exports.BadRequestError = BadRequestError;
}}),
"[project]/node_modules/elevenlabs/api/errors/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/errors/UnprocessableEntityError.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/errors/BadRequestError.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/types/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/errors/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsEnvironment = void 0;
exports.ElevenLabsEnvironment = {
    Production: "https://api.elevenlabs.io",
    ProductionUs: "https://api.us.elevenlabs.io"
};
}}),
"[project]/node_modules/elevenlabs/core/fetcher/createRequestUrl.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createRequestUrl = createRequestUrl;
const qs_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/qs/lib/index.js [app-rsc] (ecmascript)"));
function createRequestUrl(baseUrl, queryParameters) {
    return Object.keys(queryParameters !== null && queryParameters !== void 0 ? queryParameters : {}).length > 0 ? `${baseUrl}?${qs_1.default.stringify(queryParameters, {
        arrayFormat: "repeat"
    })}` : baseUrl;
}
}}),
"[project]/node_modules/elevenlabs/core/runtime/runtime.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RUNTIME = void 0;
/**
 * A constant that indicates which environment and version the SDK is running in.
 */ exports.RUNTIME = evaluateRuntime();
function evaluateRuntime() {
    var _a, _b, _c, _d, _e;
    /**
     * A constant that indicates whether the environment the code is running is a Web Browser.
     */ const isBrowser = "undefined" !== "undefined" && typeof window.document !== "undefined";
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    /**
     * A constant that indicates whether the environment the code is running is Cloudflare.
     * https://developers.cloudflare.com/workers/runtime-apis/web-standards/#navigatoruseragent
     */ const isCloudflare = typeof globalThis !== "undefined" && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === "Cloudflare-Workers";
    if (isCloudflare) {
        return {
            type: "workerd"
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is Edge Runtime.
     * https://vercel.com/docs/functions/runtimes/edge-runtime#check-if-you're-running-on-the-edge-runtime
     */ const isEdgeRuntime = typeof EdgeRuntime === "string";
    if (isEdgeRuntime) {
        return {
            type: "edge-runtime"
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is a Web Worker.
     */ const isWebWorker = typeof self === "object" && // @ts-ignore
    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === "function" && (((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === "DedicatedWorkerGlobalScope" || ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === "ServiceWorkerGlobalScope" || ((_d = self.constructor) === null || _d === void 0 ? void 0 : _d.name) === "SharedWorkerGlobalScope");
    if (isWebWorker) {
        return {
            type: "web-worker"
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is Deno.
     * FYI Deno spoofs process.versions.node, see https://deno.land/std@0.177.0/node/process.ts?s=versions
     */ const isDeno = typeof Deno !== "undefined" && typeof Deno.version !== "undefined" && typeof Deno.version.deno !== "undefined";
    if (isDeno) {
        return {
            type: "deno",
            version: Deno.version.deno
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is Bun.sh.
     */ const isBun = typeof Bun !== "undefined" && typeof Bun.version !== "undefined";
    if (isBun) {
        return {
            type: "bun",
            version: Bun.version
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is Node.JS.
     */ const isNode = typeof process !== "undefined" && "version" in process && !!process.version && "versions" in process && !!((_e = process.versions) === null || _e === void 0 ? void 0 : _e.node);
    if (isNode) {
        return {
            type: "node",
            version: process.versions.node,
            parsedVersion: Number(process.versions.node.split(".")[0])
        };
    }
    /**
     * A constant that indicates whether the environment the code is running is in React-Native.
     * https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js
     */ const isReactNative = typeof navigator !== "undefined" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === "ReactNative";
    if (isReactNative) {
        return {
            type: "react-native"
        };
    }
    return {
        type: "unknown"
    };
}
}}),
"[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RUNTIME = void 0;
var runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/runtime.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "RUNTIME", {
    enumerable: true,
    get: function() {
        return runtime_1.RUNTIME;
    }
});
}}),
"[project]/node_modules/elevenlabs/core/fetcher/getFetchFn.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getFetchFn = getFetchFn;
const runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)");
/**
 * Returns a fetch function based on the runtime
 */ function getFetchFn() {
    return __awaiter(this, void 0, void 0, function*() {
        // In Node.js 18+ environments, use native fetch
        if (runtime_1.RUNTIME.type === "node" && runtime_1.RUNTIME.parsedVersion != null && runtime_1.RUNTIME.parsedVersion >= 18) {
            return fetch;
        }
        // In Node.js 18 or lower environments, the SDK always uses`node-fetch`.
        if (runtime_1.RUNTIME.type === "node") {
            return (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/node-fetch/lib/index.mjs [app-rsc] (ecmascript)")))).default;
        }
        // Otherwise the SDK uses global fetch if available,
        // and falls back to node-fetch.
        if (typeof fetch == "function") {
            return fetch;
        }
        // Defaults to node `node-fetch` if global fetch isn't available
        return (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/node-fetch/lib/index.mjs [app-rsc] (ecmascript)")))).default;
    });
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/getRequestBody.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getRequestBody = getRequestBody;
const json_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/json.js [app-rsc] (ecmascript)");
function getRequestBody(_a) {
    return __awaiter(this, arguments, void 0, function*({ body, type }) {
        if (type.includes("json")) {
            return (0, json_1.toJson)(body);
        } else {
            return body;
        }
    });
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/NodePre18StreamWrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NodePre18StreamWrapper = void 0;
class NodePre18StreamWrapper {
    constructor(readableStream){
        this.readableStream = readableStream;
    }
    on(event, callback) {
        this.readableStream.on(event, callback);
    }
    off(event, callback) {
        this.readableStream.off(event, callback);
    }
    pipe(dest) {
        this.readableStream.pipe(dest);
        return dest;
    }
    pipeTo(dest) {
        return this.pipe(dest);
    }
    unpipe(dest) {
        if (dest) {
            this.readableStream.unpipe(dest);
        } else {
            this.readableStream.unpipe();
        }
    }
    destroy(error) {
        this.readableStream.destroy(error);
    }
    pause() {
        this.readableStream.pause();
    }
    resume() {
        this.readableStream.resume();
    }
    get isPaused() {
        return this.readableStream.isPaused();
    }
    read() {
        return __awaiter(this, void 0, void 0, function*() {
            return new Promise((resolve, reject)=>{
                const chunk = this.readableStream.read();
                if (chunk) {
                    resolve(chunk);
                } else {
                    this.readableStream.once("readable", ()=>{
                        const chunk = this.readableStream.read();
                        resolve(chunk);
                    });
                    this.readableStream.once("error", reject);
                }
            });
        });
    }
    setEncoding(encoding) {
        this.readableStream.setEncoding(encoding);
        this.encoding = encoding;
    }
    text() {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, e_1, _b, _c;
            const chunks = [];
            const encoder = new TextEncoder();
            this.readableStream.setEncoding(this.encoding || "utf-8");
            try {
                for(var _d = true, _e = __asyncValues(this.readableStream), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true){
                    _c = _f.value;
                    _d = false;
                    const chunk = _c;
                    chunks.push(encoder.encode(chunk));
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
            const decoder = new TextDecoder(this.encoding || "utf-8");
            return decoder.decode(Buffer.concat(chunks));
        });
    }
    json() {
        return __awaiter(this, void 0, void 0, function*() {
            const text = yield this.text();
            return JSON.parse(text);
        });
    }
    [Symbol.asyncIterator]() {
        const readableStream = this.readableStream;
        const iterator = readableStream[Symbol.asyncIterator]();
        // Create and return an async iterator that yields buffers
        return {
            next () {
                return __awaiter(this, void 0, void 0, function*() {
                    const { value, done } = yield iterator.next();
                    return {
                        value: value,
                        done
                    };
                });
            },
            [Symbol.asyncIterator] () {
                return this;
            }
        };
    }
}
exports.NodePre18StreamWrapper = NodePre18StreamWrapper;
}}),
"[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/UndiciStreamWrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UndiciStreamWrapper = void 0;
class UndiciStreamWrapper {
    constructor(readableStream){
        this.readableStream = readableStream;
        this.reader = this.readableStream.getReader();
        this.events = {
            data: [],
            end: [],
            error: [],
            readable: [],
            close: [],
            pause: [],
            resume: []
        };
        this.paused = false;
        this.resumeCallback = null;
        this.encoding = null;
    }
    on(event, callback) {
        var _a;
        (_a = this.events[event]) === null || _a === void 0 ? void 0 : _a.push(callback);
    }
    off(event, callback) {
        var _a;
        this.events[event] = (_a = this.events[event]) === null || _a === void 0 ? void 0 : _a.filter((cb)=>cb !== callback);
    }
    pipe(dest) {
        this.on("data", (chunk)=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._write(chunk);
            } else {
                const writer = dest.getWriter();
                writer.write(chunk).then(()=>writer.releaseLock());
            }
        });
        this.on("end", ()=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._end();
            } else {
                const writer = dest.getWriter();
                writer.close();
            }
        });
        this.on("error", (error)=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._error(error);
            } else {
                const writer = dest.getWriter();
                writer.abort(error);
            }
        });
        this._startReading();
        return dest;
    }
    pipeTo(dest) {
        return this.pipe(dest);
    }
    unpipe(dest) {
        this.off("data", (chunk)=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._write(chunk);
            } else {
                const writer = dest.getWriter();
                writer.write(chunk).then(()=>writer.releaseLock());
            }
        });
        this.off("end", ()=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._end();
            } else {
                const writer = dest.getWriter();
                writer.close();
            }
        });
        this.off("error", (error)=>{
            if (dest instanceof UndiciStreamWrapper) {
                dest._error(error);
            } else {
                const writer = dest.getWriter();
                writer.abort(error);
            }
        });
    }
    destroy(error) {
        this.reader.cancel(error).then(()=>{
            this._emit("close");
        }).catch((err)=>{
            this._emit("error", err);
        });
    }
    pause() {
        this.paused = true;
        this._emit("pause");
    }
    resume() {
        if (this.paused) {
            this.paused = false;
            this._emit("resume");
            if (this.resumeCallback) {
                this.resumeCallback();
                this.resumeCallback = null;
            }
        }
    }
    get isPaused() {
        return this.paused;
    }
    read() {
        return __awaiter(this, void 0, void 0, function*() {
            if (this.paused) {
                yield new Promise((resolve)=>{
                    this.resumeCallback = resolve;
                });
            }
            const { done, value } = yield this.reader.read();
            if (done) {
                return undefined;
            }
            return value;
        });
    }
    setEncoding(encoding) {
        this.encoding = encoding;
    }
    text() {
        return __awaiter(this, void 0, void 0, function*() {
            const chunks = [];
            while(true){
                const { done, value } = yield this.reader.read();
                if (done) {
                    break;
                }
                if (value) {
                    chunks.push(value);
                }
            }
            const decoder = new TextDecoder(this.encoding || "utf-8");
            return decoder.decode((yield new Blob(chunks).arrayBuffer()));
        });
    }
    json() {
        return __awaiter(this, void 0, void 0, function*() {
            const text = yield this.text();
            return JSON.parse(text);
        });
    }
    _write(chunk) {
        this._emit("data", chunk);
    }
    _end() {
        this._emit("end");
    }
    _error(error) {
        this._emit("error", error);
    }
    _emit(event, data) {
        if (this.events[event]) {
            for (const callback of this.events[event] || []){
                callback(data);
            }
        }
    }
    _startReading() {
        return __awaiter(this, void 0, void 0, function*() {
            try {
                this._emit("readable");
                while(true){
                    if (this.paused) {
                        yield new Promise((resolve)=>{
                            this.resumeCallback = resolve;
                        });
                    }
                    const { done, value } = yield this.reader.read();
                    if (done) {
                        this._emit("end");
                        this._emit("close");
                        break;
                    }
                    if (value) {
                        this._emit("data", value);
                    }
                }
            } catch (error) {
                this._emit("error", error);
            }
        });
    }
    [Symbol.asyncIterator]() {
        return {
            next: ()=>__awaiter(this, void 0, void 0, function*() {
                    if (this.paused) {
                        yield new Promise((resolve)=>{
                            this.resumeCallback = resolve;
                        });
                    }
                    const { done, value } = yield this.reader.read();
                    if (done) {
                        return {
                            done: true,
                            value: undefined
                        };
                    }
                    return {
                        done: false,
                        value
                    };
                }),
            [Symbol.asyncIterator] () {
                return this;
            }
        };
    }
}
exports.UndiciStreamWrapper = UndiciStreamWrapper;
}}),
"[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/Node18UniversalStreamWrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Node18UniversalStreamWrapper = void 0;
class Node18UniversalStreamWrapper {
    constructor(readableStream){
        this.readableStream = readableStream;
        this.reader = this.readableStream.getReader();
        this.events = {
            data: [],
            end: [],
            error: [],
            readable: [],
            close: [],
            pause: [],
            resume: []
        };
        this.paused = false;
        this.resumeCallback = null;
        this.encoding = null;
    }
    on(event, callback) {
        var _a;
        (_a = this.events[event]) === null || _a === void 0 ? void 0 : _a.push(callback);
    }
    off(event, callback) {
        var _a;
        this.events[event] = (_a = this.events[event]) === null || _a === void 0 ? void 0 : _a.filter((cb)=>cb !== callback);
    }
    pipe(dest) {
        this.on("data", (chunk)=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._write(chunk);
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.write(chunk).then(()=>writer.releaseLock());
                } else {
                    dest.write(chunk);
                }
            }));
        this.on("end", ()=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._end();
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.close();
                } else {
                    dest.end();
                }
            }));
        this.on("error", (error)=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._error(error);
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.abort(error);
                } else {
                    dest.destroy(error);
                }
            }));
        this._startReading();
        return dest;
    }
    pipeTo(dest) {
        return this.pipe(dest);
    }
    unpipe(dest) {
        this.off("data", (chunk)=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._write(chunk);
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.write(chunk).then(()=>writer.releaseLock());
                } else {
                    dest.write(chunk);
                }
            }));
        this.off("end", ()=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._end();
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.close();
                } else {
                    dest.end();
                }
            }));
        this.off("error", (error)=>__awaiter(this, void 0, void 0, function*() {
                if (dest instanceof Node18UniversalStreamWrapper) {
                    dest._error(error);
                } else if (dest instanceof WritableStream) {
                    const writer = dest.getWriter();
                    writer.abort(error);
                } else {
                    dest.destroy(error);
                }
            }));
    }
    destroy(error) {
        this.reader.cancel(error).then(()=>{
            this._emit("close");
        }).catch((err)=>{
            this._emit("error", err);
        });
    }
    pause() {
        this.paused = true;
        this._emit("pause");
    }
    resume() {
        if (this.paused) {
            this.paused = false;
            this._emit("resume");
            if (this.resumeCallback) {
                this.resumeCallback();
                this.resumeCallback = null;
            }
        }
    }
    get isPaused() {
        return this.paused;
    }
    read() {
        return __awaiter(this, void 0, void 0, function*() {
            if (this.paused) {
                yield new Promise((resolve)=>{
                    this.resumeCallback = resolve;
                });
            }
            const { done, value } = yield this.reader.read();
            if (done) {
                return undefined;
            }
            return value;
        });
    }
    setEncoding(encoding) {
        this.encoding = encoding;
    }
    text() {
        return __awaiter(this, void 0, void 0, function*() {
            const chunks = [];
            while(true){
                const { done, value } = yield this.reader.read();
                if (done) {
                    break;
                }
                if (value) {
                    chunks.push(value);
                }
            }
            const decoder = new TextDecoder(this.encoding || "utf-8");
            return decoder.decode((yield new Blob(chunks).arrayBuffer()));
        });
    }
    json() {
        return __awaiter(this, void 0, void 0, function*() {
            const text = yield this.text();
            return JSON.parse(text);
        });
    }
    _write(chunk) {
        this._emit("data", chunk);
    }
    _end() {
        this._emit("end");
    }
    _error(error) {
        this._emit("error", error);
    }
    _emit(event, data) {
        if (this.events[event]) {
            for (const callback of this.events[event] || []){
                callback(data);
            }
        }
    }
    _startReading() {
        return __awaiter(this, void 0, void 0, function*() {
            try {
                this._emit("readable");
                while(true){
                    if (this.paused) {
                        yield new Promise((resolve)=>{
                            this.resumeCallback = resolve;
                        });
                    }
                    const { done, value } = yield this.reader.read();
                    if (done) {
                        this._emit("end");
                        this._emit("close");
                        break;
                    }
                    if (value) {
                        this._emit("data", value);
                    }
                }
            } catch (error) {
                this._emit("error", error);
            }
        });
    }
    [Symbol.asyncIterator]() {
        return {
            next: ()=>__awaiter(this, void 0, void 0, function*() {
                    if (this.paused) {
                        yield new Promise((resolve)=>{
                            this.resumeCallback = resolve;
                        });
                    }
                    const { done, value } = yield this.reader.read();
                    if (done) {
                        return {
                            done: true,
                            value: undefined
                        };
                    }
                    return {
                        done: false,
                        value
                    };
                }),
            [Symbol.asyncIterator] () {
                return this;
            }
        };
    }
}
exports.Node18UniversalStreamWrapper = Node18UniversalStreamWrapper;
}}),
"[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/chooseStreamWrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.chooseStreamWrapper = chooseStreamWrapper;
const runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)");
function chooseStreamWrapper(responseBody) {
    return __awaiter(this, void 0, void 0, function*() {
        if (runtime_1.RUNTIME.type === "node" && runtime_1.RUNTIME.parsedVersion != null && runtime_1.RUNTIME.parsedVersion >= 18) {
            return new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/Node18UniversalStreamWrapper.js [app-rsc] (ecmascript)")))).Node18UniversalStreamWrapper(responseBody);
        } else if (runtime_1.RUNTIME.type !== "node" && typeof fetch === "function") {
            return new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/UndiciStreamWrapper.js [app-rsc] (ecmascript)")))).UndiciStreamWrapper(responseBody);
        } else {
            return new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/NodePre18StreamWrapper.js [app-rsc] (ecmascript)")))).NodePre18StreamWrapper(responseBody);
        }
    });
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/getResponseBody.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getResponseBody = getResponseBody;
const chooseStreamWrapper_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/stream-wrappers/chooseStreamWrapper.js [app-rsc] (ecmascript)");
function getResponseBody(response, responseType) {
    return __awaiter(this, void 0, void 0, function*() {
        if (response.body != null && responseType === "blob") {
            return yield response.blob();
        } else if (response.body != null && responseType === "arrayBuffer") {
            return yield response.arrayBuffer();
        } else if (response.body != null && responseType === "sse") {
            return response.body;
        } else if (response.body != null && responseType === "streaming") {
            return (0, chooseStreamWrapper_1.chooseStreamWrapper)(response.body);
        } else if (response.body != null && responseType === "text") {
            return yield response.text();
        } else {
            const text = yield response.text();
            if (text.length > 0) {
                try {
                    let responseBody = JSON.parse(text);
                    return responseBody;
                } catch (err) {
                    return {
                        ok: false,
                        error: {
                            reason: "non-json",
                            statusCode: response.status,
                            rawBody: text
                        }
                    };
                }
            } else {
                return undefined;
            }
        }
    });
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/signals.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getTimeoutSignal = getTimeoutSignal;
exports.anySignal = anySignal;
const TIMEOUT = "timeout";
function getTimeoutSignal(timeoutMs) {
    const controller = new AbortController();
    const abortId = setTimeout(()=>controller.abort(TIMEOUT), timeoutMs);
    return {
        signal: controller.signal,
        abortId
    };
}
/**
 * Returns an abort signal that is getting aborted when
 * at least one of the specified abort signals is aborted.
 *
 * Requires at least node.js 18.
 */ function anySignal(...args) {
    // Allowing signals to be passed either as array
    // of signals or as multiple arguments.
    const signals = args.length === 1 && Array.isArray(args[0]) ? args[0] : args;
    const controller = new AbortController();
    for (const signal of signals){
        if (signal.aborted) {
            // Exiting early if one of the signals
            // is already aborted.
            controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason);
            break;
        }
        // Listening for signals and removing the listeners
        // when at least one symbol is aborted.
        signal.addEventListener("abort", ()=>controller.abort(signal === null || signal === void 0 ? void 0 : signal.reason), {
            signal: controller.signal
        });
    }
    return controller.signal;
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/makeRequest.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.makeRequest = void 0;
const signals_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/signals.js [app-rsc] (ecmascript)");
const makeRequest = (fetchFn, url, method, headers, requestBody, timeoutMs, abortSignal, withCredentials, duplex)=>__awaiter(void 0, void 0, void 0, function*() {
        const signals = [];
        // Add timeout signal
        let timeoutAbortId = undefined;
        if (timeoutMs != null) {
            const { signal, abortId } = (0, signals_1.getTimeoutSignal)(timeoutMs);
            timeoutAbortId = abortId;
            signals.push(signal);
        }
        // Add arbitrary signal
        if (abortSignal != null) {
            signals.push(abortSignal);
        }
        let newSignals = (0, signals_1.anySignal)(signals);
        const response = yield fetchFn(url, {
            method: method,
            headers,
            body: requestBody,
            signal: newSignals,
            credentials: withCredentials ? "include" : undefined,
            // @ts-ignore
            duplex
        });
        if (timeoutAbortId != null) {
            clearTimeout(timeoutAbortId);
        }
        return response;
    });
exports.makeRequest = makeRequest;
}}),
"[project]/node_modules/elevenlabs/core/fetcher/requestWithRetries.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.requestWithRetries = requestWithRetries;
const INITIAL_RETRY_DELAY = 1000; // in milliseconds
const MAX_RETRY_DELAY = 60000; // in milliseconds
const DEFAULT_MAX_RETRIES = 2;
const JITTER_FACTOR = 0.2; // 20% random jitter
function addJitter(delay) {
    // Generate a random value between -JITTER_FACTOR and +JITTER_FACTOR
    const jitterMultiplier = 1 + (Math.random() * 2 - 1) * JITTER_FACTOR;
    return delay * jitterMultiplier;
}
function requestWithRetries(requestFn_1) {
    return __awaiter(this, arguments, void 0, function*(requestFn, maxRetries = DEFAULT_MAX_RETRIES) {
        let response = yield requestFn();
        for(let i = 0; i < maxRetries; ++i){
            if ([
                408,
                429
            ].includes(response.status) || response.status >= 500) {
                // Calculate base delay using exponential backoff (in milliseconds)
                const baseDelay = Math.min(INITIAL_RETRY_DELAY * Math.pow(2, i), MAX_RETRY_DELAY);
                // Add jitter to the delay
                const delayWithJitter = addJitter(baseDelay);
                yield new Promise((resolve)=>setTimeout(resolve, delayWithJitter));
                response = yield requestFn();
            } else {
                break;
            }
        }
        return response;
    });
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/Fetcher.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fetcher = void 0;
exports.fetcherImpl = fetcherImpl;
const json_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/json.js [app-rsc] (ecmascript)");
const createRequestUrl_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/createRequestUrl.js [app-rsc] (ecmascript)");
const getFetchFn_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/getFetchFn.js [app-rsc] (ecmascript)");
const getRequestBody_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/getRequestBody.js [app-rsc] (ecmascript)");
const getResponseBody_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/getResponseBody.js [app-rsc] (ecmascript)");
const makeRequest_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/makeRequest.js [app-rsc] (ecmascript)");
const requestWithRetries_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/requestWithRetries.js [app-rsc] (ecmascript)");
function fetcherImpl(args) {
    return __awaiter(this, void 0, void 0, function*() {
        const headers = {};
        if (args.body !== undefined && args.contentType != null) {
            headers["Content-Type"] = args.contentType;
        }
        if (args.headers != null) {
            for (const [key, value] of Object.entries(args.headers)){
                if (value != null) {
                    headers[key] = value;
                }
            }
        }
        const url = (0, createRequestUrl_1.createRequestUrl)(args.url, args.queryParameters);
        const requestBody = yield (0, getRequestBody_1.getRequestBody)({
            body: args.body,
            type: args.requestType === "json" ? "json" : "other"
        });
        const fetchFn = yield (0, getFetchFn_1.getFetchFn)();
        try {
            const response = yield (0, requestWithRetries_1.requestWithRetries)(()=>__awaiter(this, void 0, void 0, function*() {
                    return (0, makeRequest_1.makeRequest)(fetchFn, url, args.method, headers, requestBody, args.timeoutMs, args.abortSignal, args.withCredentials, args.duplex);
                }), args.maxRetries);
            const responseBody = yield (0, getResponseBody_1.getResponseBody)(response, args.responseType);
            if (response.status >= 200 && response.status < 400) {
                return {
                    ok: true,
                    body: responseBody,
                    headers: response.headers
                };
            } else {
                return {
                    ok: false,
                    error: {
                        reason: "status-code",
                        statusCode: response.status,
                        body: responseBody
                    }
                };
            }
        } catch (error) {
            if (args.abortSignal != null && args.abortSignal.aborted) {
                return {
                    ok: false,
                    error: {
                        reason: "unknown",
                        errorMessage: "The user aborted a request"
                    }
                };
            } else if (error instanceof Error && error.name === "AbortError") {
                return {
                    ok: false,
                    error: {
                        reason: "timeout"
                    }
                };
            } else if (error instanceof Error) {
                return {
                    ok: false,
                    error: {
                        reason: "unknown",
                        errorMessage: error.message
                    }
                };
            }
            return {
                ok: false,
                error: {
                    reason: "unknown",
                    errorMessage: (0, json_1.toJson)(error)
                }
            };
        }
    });
}
exports.fetcher = fetcherImpl;
}}),
"[project]/node_modules/elevenlabs/core/fetcher/getHeader.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getHeader = getHeader;
function getHeader(headers, header) {
    for (const [headerKey, headerValue] of Object.entries(headers)){
        if (headerKey.toLowerCase() === header.toLowerCase()) {
            return headerValue;
        }
    }
    return undefined;
}
}}),
"[project]/node_modules/elevenlabs/core/fetcher/Supplier.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Supplier = void 0;
exports.Supplier = {
    get: (supplier)=>__awaiter(void 0, void 0, void 0, function*() {
            if (typeof supplier === "function") {
                return supplier();
            } else {
                return supplier;
            }
        })
};
}}),
"[project]/node_modules/elevenlabs/core/fetcher/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Supplier = exports.getHeader = exports.fetcher = void 0;
var Fetcher_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/Fetcher.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "fetcher", {
    enumerable: true,
    get: function() {
        return Fetcher_1.fetcher;
    }
});
var getHeader_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/getHeader.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "getHeader", {
    enumerable: true,
    get: function() {
        return getHeader_1.getHeader;
    }
});
var Supplier_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/Supplier.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Supplier", {
    enumerable: true,
    get: function() {
        return Supplier_1.Supplier;
    }
});
}}),
"[project]/node_modules/elevenlabs/core/form-data-utils/FormDataWrapper.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WebFormData = exports.Node16FormData = exports.Node18FormData = void 0;
exports.newFormData = newFormData;
const runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)");
function isNamedValue(value) {
    return typeof value === "object" && value != null && "name" in value;
}
function newFormData() {
    return __awaiter(this, void 0, void 0, function*() {
        let formdata;
        if (runtime_1.RUNTIME.type === "node" && runtime_1.RUNTIME.parsedVersion != null && runtime_1.RUNTIME.parsedVersion >= 18) {
            formdata = new Node18FormData();
        } else if (runtime_1.RUNTIME.type === "node") {
            formdata = new Node16FormData();
        } else {
            formdata = new WebFormData();
        }
        yield formdata.setup();
        return formdata;
    });
}
/**
 * Form Data Implementation for Node.js 18+
 */ class Node18FormData {
    setup() {
        return __awaiter(this, void 0, void 0, function*() {
            this.fd = new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/formdata-node/lib/form-data.cjs [app-rsc] (ecmascript)")))).FormData();
        });
    }
    append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
    }
    appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            if (fileName == null && isNamedValue(value)) {
                fileName = value.name;
            }
            if (value instanceof Blob) {
                (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value, fileName);
            } else {
                (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, {
                    type: undefined,
                    name: fileName,
                    [Symbol.toStringTag]: "File",
                    stream () {
                        return value;
                    }
                });
            }
        });
    }
    getRequest() {
        return __awaiter(this, void 0, void 0, function*() {
            const encoder = new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/form-data-encoder/lib/index.cjs [app-rsc] (ecmascript)")))).FormDataEncoder(this.fd);
            return {
                body: (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/readable-stream/lib/ours/index.js [app-rsc] (ecmascript)")))).Readable.from(encoder),
                headers: encoder.headers,
                duplex: "half"
            };
        });
    }
}
exports.Node18FormData = Node18FormData;
/**
 * Form Data Implementation for Node.js 16-18
 */ class Node16FormData {
    setup() {
        return __awaiter(this, void 0, void 0, function*() {
            this.fd = new (yield Promise.resolve().then(()=>__importStar(__turbopack_context__.r("[project]/node_modules/form-data/lib/form_data.js [app-rsc] (ecmascript)")))).default();
        });
    }
    append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
    }
    appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            if (fileName == null && isNamedValue(value)) {
                fileName = value.name;
            }
            let bufferedValue;
            if (value instanceof Blob) {
                bufferedValue = Buffer.from((yield value.arrayBuffer()));
            } else {
                bufferedValue = value;
            }
            if (fileName == null) {
                (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, bufferedValue);
            } else {
                (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, bufferedValue, {
                    filename: fileName
                });
            }
        });
    }
    getRequest() {
        return {
            body: this.fd,
            headers: this.fd ? this.fd.getHeaders() : {}
        };
    }
}
exports.Node16FormData = Node16FormData;
/**
 * Form Data Implementation for Web
 */ class WebFormData {
    setup() {
        return __awaiter(this, void 0, void 0, function*() {
            this.fd = new FormData();
        });
    }
    append(key, value) {
        var _a;
        (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value);
    }
    appendFile(key, value, fileName) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            if (fileName == null && isNamedValue(value)) {
                fileName = value.name;
            }
            if (value instanceof Blob) {
                (_a = this.fd) === null || _a === void 0 ? void 0 : _a.append(key, value, fileName);
                return;
            }
            (_b = this.fd) === null || _b === void 0 ? void 0 : _b.append(key, new Blob([
                value
            ]), fileName);
        });
    }
    getRequest() {
        return {
            body: this.fd,
            headers: {}
        };
    }
}
exports.WebFormData = WebFormData;
}}),
"[project]/node_modules/elevenlabs/core/form-data-utils/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/form-data-utils/FormDataWrapper.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/core/streaming-fetcher/Stream.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __await = this && this.__await || function(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = this && this.__asyncGenerator || function(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    "TURBOPACK unreachable";
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Stream = void 0;
exports.readableStreamAsyncIterable = readableStreamAsyncIterable;
const runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)");
const DATA_PREFIX = "data:";
class Stream {
    constructor({ stream, parse, eventShape, signal }){
        this.controller = new AbortController();
        this.stream = stream;
        this.parse = parse;
        if (eventShape.type === "sse") {
            this.prefix = DATA_PREFIX;
            this.messageTerminator = "\n";
            this.streamTerminator = eventShape.streamTerminator;
        } else {
            this.messageTerminator = eventShape.messageTerminator;
        }
        signal === null || signal === void 0 ? void 0 : signal.addEventListener("abort", ()=>this.controller.abort());
    }
    iterMessages() {
        return __asyncGenerator(this, arguments, function* iterMessages_1() {
            var _a, e_1, _b, _c;
            this.controller.signal;
            const stream = readableStreamAsyncIterable(this.stream);
            let buf = "";
            let prefixSeen = false;
            try {
                for(var _d = true, stream_1 = __asyncValues(stream), stream_1_1; stream_1_1 = yield __await(stream_1.next()), _a = stream_1_1.done, !_a; _d = true){
                    _c = stream_1_1.value;
                    _d = false;
                    const chunk = _c;
                    buf += this.decodeChunk(chunk);
                    let terminatorIndex;
                    while((terminatorIndex = buf.indexOf(this.messageTerminator)) >= 0){
                        let line = buf.slice(0, terminatorIndex + 1);
                        buf = buf.slice(terminatorIndex + this.messageTerminator.length);
                        if (!line.trim()) {
                            continue;
                        }
                        if (!prefixSeen && this.prefix != null) {
                            const prefixIndex = line.indexOf(this.prefix);
                            if (prefixIndex === -1) {
                                continue;
                            }
                            prefixSeen = true;
                            line = line.slice(prefixIndex + this.prefix.length);
                        }
                        if (this.streamTerminator != null && line.includes(this.streamTerminator)) {
                            return yield __await(void 0);
                        }
                        const message = yield __await(this.parse(JSON.parse(line)));
                        yield yield __await(message);
                        prefixSeen = false;
                    }
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (!_d && !_a && (_b = stream_1.return)) yield __await(_b.call(stream_1));
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
        });
    }
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            var _b, e_2, _c, _d;
            try {
                for(var _e = true, _f = __asyncValues(this.iterMessages()), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true){
                    _d = _g.value;
                    _e = false;
                    const message = _d;
                    yield yield __await(message);
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally{
                try {
                    if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));
                } finally{
                    if (e_2) throw e_2.error;
                }
            }
        });
    }
    decodeChunk(chunk) {
        let decoded = "";
        // If TextDecoder is present, use it
        if (typeof TextDecoder !== "undefined") {
            const decoder = new TextDecoder("utf8");
            decoded += decoder.decode(chunk);
        } else if (runtime_1.RUNTIME.type === "node" && typeof chunk !== "undefined") {
            decoded += Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk);
        }
        return decoded;
    }
}
exports.Stream = Stream;
/**
 * Browser polyfill for ReadableStream
 */ // eslint-disable-next-line @typescript-eslint/no-explicit-any
function readableStreamAsyncIterable(stream) {
    if (stream[Symbol.asyncIterator]) {
        return stream;
    }
    const reader = stream.getReader();
    return {
        next () {
            return __awaiter(this, void 0, void 0, function*() {
                try {
                    const result = yield reader.read();
                    if (result === null || result === void 0 ? void 0 : result.done) {
                        reader.releaseLock();
                    } // release lock when stream becomes closed
                    return result;
                } catch (e) {
                    reader.releaseLock(); // release lock when stream becomes errored
                    throw e;
                }
            });
        },
        return () {
            return __awaiter(this, void 0, void 0, function*() {
                const cancelPromise = reader.cancel();
                reader.releaseLock();
                yield cancelPromise;
                return {
                    done: true,
                    value: undefined
                };
            });
        },
        [Symbol.asyncIterator] () {
            return this;
        }
    };
}
}}),
"[project]/node_modules/elevenlabs/core/streaming-fetcher/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Stream = void 0;
var Stream_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/streaming-fetcher/Stream.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "Stream", {
    enumerable: true,
    get: function() {
        return Stream_1.Stream;
    }
});
}}),
"[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/fetcher/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/form-data-utils/index.js [app-rsc] (ecmascript)"), exports);
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/streaming-fetcher/index.js [app-rsc] (ecmascript)"), exports);
}}),
"[project]/node_modules/elevenlabs/api/resources/history/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.History = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class History {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Returns metadata about all your generated audio.
     *
     * @param {ElevenLabs.HistoryGetAllRequest} request
     * @param {History.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.history.getAll()
     */ getAll() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { page_size: pageSize, start_after_history_item_id: startAfterHistoryItemId, voice_id: voiceId, search, source } = request;
            const _queryParams = {};
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            if (startAfterHistoryItemId != null) {
                _queryParams["start_after_history_item_id"] = startAfterHistoryItemId;
            }
            if (voiceId != null) {
                _queryParams["voice_id"] = voiceId;
            }
            if (search != null) {
                _queryParams["search"] = search;
            }
            if (source != null) {
                _queryParams["source"] = source;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/history"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns information about an history item by its ID.
     *
     * @param {string} historyItemId - History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.
     * @param {History.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.history.get("HISTORY_ITEM_ID")
     */ get(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/history/${encodeURIComponent(historyItemId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history/{history_item_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete a history item by its ID
     *
     * @param {string} historyItemId - History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.
     * @param {History.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.history.delete("HISTORY_ITEM_ID")
     */ delete(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/history/${encodeURIComponent(historyItemId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/history/{history_item_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns the audio of an history item.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ getAudio(historyItemId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/history/${encodeURIComponent(historyItemId)}/audio`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/history/{history_item_id}/audio.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.
     *
     * @param {ElevenLabs.DownloadHistoryRequest} request
     * @param {History.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.history.download({
     *         history_item_ids: ["HISTORY_ITEM_ID"]
     *     })
     */ download(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/history/download"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/history/download.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.History = History;
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextToSoundEffects = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class TextToSoundEffects {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Converts a text of your choice into sound
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ convert(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/sound-generation"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/sound-generation.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.TextToSoundEffects = TextToSoundEffects;
}}),
"[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AudioIsolation = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class AudioIsolation {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Removes background noise from audio
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ audioIsolation(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            yield _request.appendFile("audio", request.audio);
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/audio-isolation"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-isolation.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Removes background noise from audio and streams the result
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ audioIsolationStream(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            yield _request.appendFile("audio", request.audio);
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/audio-isolation/stream"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-isolation/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.AudioIsolation = AudioIsolation;
}}),
"[project]/node_modules/elevenlabs/api/resources/samples/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Samples = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
/**
 * Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples.
 */ class Samples {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Removes a sample by its ID.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {string} sampleId - Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.
     * @param {Samples.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.samples.delete("VOICE_ID", "SAMPLE_ID")
     */ delete(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/voices/{voice_id}/samples/{sample_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns the audio corresponding to a sample attached to a voice.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ getAudio(voiceId, sampleId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}/samples/${encodeURIComponent(sampleId)}/audio`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}/samples/{sample_id}/audio.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Samples = Samples;
}}),
"[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextToSpeech = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class TextToSpeech {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Converts text into speech using a voice of your choice and returns audio.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ convert(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, [
                "enable_logging",
                "optimize_streaming_latency",
                "output_format"
            ]);
            const _queryParams = {};
            if (enableLogging != null) {
                _queryParams["enable_logging"] = enableLogging.toString();
            }
            if (optimizeStreamingLatency != null) {
                _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
            }
            if (outputFormat != null) {
                _queryParams["output_format"] = outputFormat;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/text-to-speech/${encodeURIComponent(voiceId)}`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Converts text into speech using a voice of your choice and returns JSON containing audio as a base64 encoded string together with information on when which character was spoken.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {ElevenLabs.TextToSpeechWithTimestampsRequest} request
     * @param {TextToSpeech.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.textToSpeech.convertWithTimestamps("JBFqnCBsd6RMkjVDRZzb", {
     *         output_format: "mp3_44100_128",
     *         text: "The first move is what sets everything in motion.",
     *         model_id: "eleven_multilingual_v2"
     *     })
     */ convertWithTimestamps(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, [
                "enable_logging",
                "optimize_streaming_latency",
                "output_format"
            ]);
            const _queryParams = {};
            if (enableLogging != null) {
                _queryParams["enable_logging"] = enableLogging.toString();
            }
            if (optimizeStreamingLatency != null) {
                _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
            }
            if (outputFormat != null) {
                _queryParams["output_format"] = outputFormat;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/text-to-speech/${encodeURIComponent(voiceId)}/with-timestamps`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/with-timestamps.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Converts text into speech using a voice of your choice and returns audio as an audio stream.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ convertAsStream(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, [
                "enable_logging",
                "optimize_streaming_latency",
                "output_format"
            ]);
            const _queryParams = {};
            if (enableLogging != null) {
                _queryParams["enable_logging"] = enableLogging.toString();
            }
            if (optimizeStreamingLatency != null) {
                _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
            }
            if (outputFormat != null) {
                _queryParams["output_format"] = outputFormat;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/text-to-speech/${encodeURIComponent(voiceId)}/stream`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.
     */ streamWithTimestamps(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { enable_logging: enableLogging, optimize_streaming_latency: optimizeStreamingLatency, output_format: outputFormat } = request, _body = __rest(request, [
                "enable_logging",
                "optimize_streaming_latency",
                "output_format"
            ]);
            const _queryParams = {};
            if (enableLogging != null) {
                _queryParams["enable_logging"] = enableLogging.toString();
            }
            if (optimizeStreamingLatency != null) {
                _queryParams["optimize_streaming_latency"] = optimizeStreamingLatency.toString();
            }
            if (outputFormat != null) {
                _queryParams["output_format"] = outputFormat;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/text-to-speech/${encodeURIComponent(voiceId)}/stream/with-timestamps`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                responseType: "sse",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return new core.Stream({
                    stream: _response.body,
                    parse: (data)=>data,
                    signal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
                    eventShape: {
                        type: "json",
                        messageTerminator: "\n"
                    }
                });
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-speech/{voice_id}/stream/with-timestamps.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.TextToSpeech = TextToSpeech;
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SpeechToSpeech = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class SpeechToSpeech {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Create speech by combining the content and emotion of the uploaded audio with a voice of your choice.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ convert(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _queryParams = {};
            if (request.enable_logging != null) {
                _queryParams["enable_logging"] = request.enable_logging.toString();
            }
            if (request.optimize_streaming_latency != null) {
                _queryParams["optimize_streaming_latency"] = request.optimize_streaming_latency.toString();
            }
            if (request.output_format != null) {
                _queryParams["output_format"] = request.output_format;
            }
            const _request = yield core.newFormData();
            yield _request.appendFile("audio", request.audio);
            if (request.model_id != null) {
                _request.append("model_id", request.model_id);
            }
            if (request.voice_settings != null) {
                _request.append("voice_settings", request.voice_settings);
            }
            if (request.seed != null) {
                _request.append("seed", request.seed.toString());
            }
            if (request.remove_background_noise != null) {
                _request.append("remove_background_noise", request.remove_background_noise.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/speech-to-speech/${encodeURIComponent(voiceId)}`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                queryParameters: _queryParams,
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-speech/{voice_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Create speech by combining the content and emotion of the uploaded audio with a voice of your choice and returns an audio stream.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ convertAsStream(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _queryParams = {};
            if (request.enable_logging != null) {
                _queryParams["enable_logging"] = request.enable_logging.toString();
            }
            if (request.optimize_streaming_latency != null) {
                _queryParams["optimize_streaming_latency"] = request.optimize_streaming_latency.toString();
            }
            if (request.output_format != null) {
                _queryParams["output_format"] = request.output_format;
            }
            const _request = yield core.newFormData();
            yield _request.appendFile("audio", request.audio);
            if (request.model_id != null) {
                _request.append("model_id", request.model_id);
            }
            if (request.voice_settings != null) {
                _request.append("voice_settings", request.voice_settings);
            }
            if (request.seed != null) {
                _request.append("seed", request.seed.toString());
            }
            if (request.remove_background_noise != null) {
                _request.append("remove_background_noise", request.remove_background_noise.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/speech-to-speech/${encodeURIComponent(voiceId)}/stream`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                queryParameters: _queryParams,
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-speech/{voice_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.SpeechToSpeech = SpeechToSpeech;
}}),
"[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VoiceGeneration = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class VoiceGeneration {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Get possible parameters for the /v1/voice-generation/generate-voice endpoint.
     *
     * @param {VoiceGeneration.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.voiceGeneration.generateParameters()
     */ generateParameters(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voice-generation/generate-voice/parameters"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                throw new errors.ElevenLabsError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                });
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voice-generation/generate-voice/parameters.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ generate(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voice-generation/generate-voice"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voice-generation/generate-voice.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.
     *
     * @param {ElevenLabs.CreatePreviouslyGenertedVoiceRequest} request
     * @param {VoiceGeneration.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voiceGeneration.createAPreviouslyGeneratedVoice({
     *         voice_name: "Alex",
     *         voice_description: "Middle-aged American woman",
     *         generated_voice_id: "rbVJFu6SGRD1dbWpKnWl"
     *     })
     */ createAPreviouslyGeneratedVoice(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voice-generation/create-voice"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voice-generation/create-voice.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.VoiceGeneration = VoiceGeneration;
}}),
"[project]/node_modules/elevenlabs/api/resources/textToVoice/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextToVoice = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class TextToVoice {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.
     *
     * @param {ElevenLabs.VoicePreviewsRequestModel} request
     * @param {TextToVoice.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.textToVoice.createPreviews({
     *         voice_description: "A sassy little squeaky mouse",
     *         text: "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
     *     })
     */ createPreviews(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { output_format: outputFormat } = request, _body = __rest(request, [
                "output_format"
            ]);
            const _queryParams = {};
            if (outputFormat != null) {
                _queryParams["output_format"] = outputFormat;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/text-to-voice/create-previews"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-voice/create-previews.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using /v1/text-to-voice/create-previews.
     *
     * @param {ElevenLabs.BodyCreateANewVoiceFromVoicePreviewV1TextToVoiceCreateVoiceFromPreviewPost} request
     * @param {TextToVoice.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.textToVoice.createVoiceFromPreview({
     *         voice_name: "Little squeaky mouse",
     *         voice_description: "A sassy little squeaky mouse",
     *         generated_voice_id: "37HceQefKmEi3bGovXjL"
     *     })
     */ createVoiceFromPreview(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/text-to-voice/create-voice-from-preview"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/text-to-voice/create-voice-from-preview.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.TextToVoice = TextToVoice;
}}),
"[project]/node_modules/elevenlabs/api/resources/user/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.User = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class User {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Gets extended information about the users subscription
     *
     * @param {User.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.user.getSubscription()
     */ getSubscription(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/user/subscription"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/user/subscription.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets information about the user
     *
     * @param {User.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.user.get()
     */ get(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/user"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/user.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.User = User;
}}),
"[project]/node_modules/elevenlabs/api/resources/voices/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Voices = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
/**
 * Access to voices created either by you or us.
 */ class Voices {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Gets a list of all available voices for a user.
     *
     * @param {ElevenLabs.VoicesGetAllRequest} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.getAll()
     */ getAll() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { show_legacy: showLegacy } = request;
            const _queryParams = {};
            if (showLegacy != null) {
                _queryParams["show_legacy"] = showLegacy.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voices"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets the default settings for voices. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.voices.getDefaultSettings()
     */ getDefaultSettings(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voices/settings/default"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                throw new errors.ElevenLabsError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body
                });
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/settings/default.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns the settings for a specific voice. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.getSettings("JBFqnCBsd6RMkjVDRZzb")
     */ getSettings(voiceId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}/settings`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}/settings.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns metadata about a specific voice.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {ElevenLabs.VoicesGetRequest} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.get("JBFqnCBsd6RMkjVDRZzb")
     */ get(voiceId_1) {
        return __awaiter(this, arguments, void 0, function*(voiceId, request = {}, requestOptions) {
            var _a, _b;
            const { with_settings: withSettings } = request;
            const _queryParams = {};
            if (withSettings != null) {
                _queryParams["with_settings"] = withSettings.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/voices/{voice_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a voice by its ID.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.delete("VOICE_ID")
     */ delete(voiceId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/voices/{voice_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Edit your settings for a specific voice. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {ElevenLabs.VoiceSettings} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.editSettings("VOICE_ID", {
     *         stability: 0.1,
     *         similarity_boost: 0.3,
     *         style: 0.2
     *     })
     */ editSettings(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}/settings/edit`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/{voice_id}/settings/edit.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Add a new voice to your collection of voices in VoiceLab.
     *
     * @param {ElevenLabs.BodyAddVoiceV1VoicesAddPost} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.add({
     *         files: [fs.createReadStream("/path/to/your/file")],
     *         name: "Alex"
     *     })
     */ add(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            for (const _file of request.files){
                yield _request.appendFile("files", _file);
            }
            if (request.remove_background_noise != null) {
                _request.append("remove_background_noise", request.remove_background_noise.toString());
            }
            if (request.description != null) {
                _request.append("description", request.description);
            }
            if (request.labels != null) {
                _request.append("labels", request.labels);
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/voices/add"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/add.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Edit a voice created by you.
     *
     * @param {string} voiceId
     * @param {ElevenLabs.BodyEditVoiceV1VoicesVoiceIdEditPost} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.edit("VOICE_ID", {
     *         name: "George"
     *     })
     */ edit(voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            if (request.files != null) {
                for (const _file of request.files){
                    yield _request.appendFile("files", _file);
                }
            }
            if (request.remove_background_noise != null) {
                _request.append("remove_background_noise", request.remove_background_noise.toString());
            }
            if (request.description != null) {
                _request.append("description", request.description);
            }
            if (request.labels != null) {
                _request.append("labels", request.labels);
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/${encodeURIComponent(voiceId)}/edit`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/{voice_id}/edit.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Add a sharing voice to your collection of voices in VoiceLab.
     *
     * @param {string} publicUserId - Public user ID used to publicly identify ElevenLabs users.
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {ElevenLabs.AddSharingVoiceRequest} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.addSharingVoice("63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f", "sB1b5zUrxQVAFl2PhZFp", {
     *         new_name: "Alita"
     *     })
     */ addSharingVoice(publicUserId, voiceId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/voices/add/${encodeURIComponent(publicUserId)}/${encodeURIComponent(voiceId)}`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/voices/add/{public_user_id}/{voice_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets a list of shared voices.
     *
     * @param {ElevenLabs.VoicesGetSharedRequest} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.getShared({
     *         page_size: 1,
     *         gender: "female",
     *         language: "en"
     *     })
     */ getShared() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { page_size: pageSize, category, gender, age, accent, language, search, use_cases: useCases, descriptives, featured, reader_app_enabled: readerAppEnabled, owner_id: ownerId, sort, page } = request;
            const _queryParams = {};
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            if (category != null) {
                _queryParams["category"] = category;
            }
            if (gender != null) {
                _queryParams["gender"] = gender;
            }
            if (age != null) {
                _queryParams["age"] = age;
            }
            if (accent != null) {
                _queryParams["accent"] = accent;
            }
            if (language != null) {
                _queryParams["language"] = language;
            }
            if (search != null) {
                _queryParams["search"] = search;
            }
            if (useCases != null) {
                if (Array.isArray(useCases)) {
                    _queryParams["use_cases"] = useCases.map((item)=>item);
                } else {
                    _queryParams["use_cases"] = useCases;
                }
            }
            if (descriptives != null) {
                if (Array.isArray(descriptives)) {
                    _queryParams["descriptives"] = descriptives.map((item)=>item);
                } else {
                    _queryParams["descriptives"] = descriptives;
                }
            }
            if (featured != null) {
                _queryParams["featured"] = featured.toString();
            }
            if (readerAppEnabled != null) {
                _queryParams["reader_app_enabled"] = readerAppEnabled.toString();
            }
            if (ownerId != null) {
                _queryParams["owner_id"] = ownerId;
            }
            if (sort != null) {
                _queryParams["sort"] = sort;
            }
            if (page != null) {
                _queryParams["page"] = page.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/shared-voices"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/shared-voices.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.
     *
     * @param {ElevenLabs.BodyGetSimilarLibraryVoicesV1SimilarVoicesPost} request
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.getSimilarLibraryVoices({})
     */ getSimilarLibraryVoices(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.audio_file != null) {
                yield _request.appendFile("audio_file", request.audio_file);
            }
            if (request.similarity_threshold != null) {
                _request.append("similarity_threshold", request.similarity_threshold.toString());
            }
            if (request.top_k != null) {
                _request.append("top_k", request.top_k.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/similar-voices"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/similar-voices.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets a profile page based on a handle
     *
     * @param {string} handle - Handle for a VA's profile page
     * @param {Voices.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.getAProfilePage("talexgeorge")
     */ getAProfilePage(handle, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `profile/${encodeURIComponent(handle)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /profile/{handle}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Voices = Voices;
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Projects = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class Projects {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Returns a list of your Studio projects with metadata.
     *
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.getAll()
     */ getAll(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/studio/projects"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.
     *
     * @param {ElevenLabs.studio.BodyCreateStudioProjectV1StudioProjectsPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.add({
     *         name: "name",
     *         default_title_voice_id: "default_title_voice_id",
     *         default_paragraph_voice_id: "default_paragraph_voice_id",
     *         default_model_id: "default_model_id"
     *     })
     */ add(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            _request.append("default_title_voice_id", request.default_title_voice_id);
            _request.append("default_paragraph_voice_id", request.default_paragraph_voice_id);
            _request.append("default_model_id", request.default_model_id);
            if (request.from_url != null) {
                _request.append("from_url", request.from_url);
            }
            if (request.from_document != null) {
                yield _request.appendFile("from_document", request.from_document);
            }
            if (request.quality_preset != null) {
                _request.append("quality_preset", request.quality_preset);
            }
            if (request.title != null) {
                _request.append("title", request.title);
            }
            if (request.author != null) {
                _request.append("author", request.author);
            }
            if (request.description != null) {
                _request.append("description", request.description);
            }
            if (request.genres != null) {
                for (const _item of request.genres){
                    _request.append("genres", _item);
                }
            }
            if (request.target_audience != null) {
                _request.append("target_audience", request.target_audience);
            }
            if (request.language != null) {
                _request.append("language", request.language);
            }
            if (request.content_type != null) {
                _request.append("content_type", request.content_type);
            }
            if (request.original_publication_date != null) {
                _request.append("original_publication_date", request.original_publication_date);
            }
            if (request.mature_content != null) {
                _request.append("mature_content", request.mature_content.toString());
            }
            if (request.isbn_number != null) {
                _request.append("isbn_number", request.isbn_number);
            }
            if (request.acx_volume_normalization != null) {
                _request.append("acx_volume_normalization", request.acx_volume_normalization.toString());
            }
            if (request.volume_normalization != null) {
                _request.append("volume_normalization", request.volume_normalization.toString());
            }
            if (request.pronunciation_dictionary_locators != null) {
                for (const _item of request.pronunciation_dictionary_locators){
                    _request.append("pronunciation_dictionary_locators", _item);
                }
            }
            if (request.callback_url != null) {
                _request.append("callback_url", request.callback_url);
            }
            if (request.fiction != null) {
                _request.append("fiction", request.fiction);
            }
            if (request.quality_check_on != null) {
                _request.append("quality_check_on", request.quality_check_on.toString());
            }
            if (request.apply_text_normalization != null) {
                _request.append("apply_text_normalization", request.apply_text_normalization);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            if (request.auto_assign_voices != null) {
                _request.append("auto_assign_voices", request.auto_assign_voices.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/studio/projects"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.get("21m00Tcm4TlvDq8ikWAM")
     */ get(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates Studio project metadata.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.studio.BodyUpdateStudioProjectMetadataV1StudioProjectsProjectIdPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.updateMetadata("21m00Tcm4TlvDq8ikWAM", {
     *         name: "name",
     *         default_title_voice_id: "default_title_voice_id",
     *         default_paragraph_voice_id: "default_paragraph_voice_id"
     *     })
     */ updateMetadata(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a Studio project.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.delete("21m00Tcm4TlvDq8ikWAM")
     */ delete(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/studio/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates Studio project content.
     *
     * @param {string} projectId
     * @param {ElevenLabs.studio.BodyUpdateStudioProjectContentV1StudioProjectsProjectIdContentPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.updateContent("21m00Tcm4TlvDq8ikWAM", {})
     */ updateContent(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.from_url != null) {
                _request.append("from_url", request.from_url);
            }
            if (request.from_document != null) {
                yield _request.appendFile("from_document", request.from_document);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/content`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/content.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Starts conversion of a Studio project and all of its chapters.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.convert("21m00Tcm4TlvDq8ikWAM")
     */ convert(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/convert`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/convert.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets the snapshots of a Studio project.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.getSnapshots("21m00Tcm4TlvDq8ikWAM")
     */ getSnapshots(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/snapshots.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Stream the audio from a Studio project snapshot.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} projectSnapshotId - The ID of the Studio project snapshot.
     * @param {ElevenLabs.studio.BodyStreamStudioProjectAudioV1StudioProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.streamAudio("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ streamAudio(projectId_1, projectSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, projectSnapshotId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/stream`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns a compressed archive of the Studio project's audio.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} projectSnapshotId - The ID of the Studio project snapshot.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.streamArchive("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ streamArchive(projectId, projectSnapshotId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/archive`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.studio.BodyCreatePronunciationDictionariesV1StudioProjectsProjectIdPronunciationDictionariesPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.projects.updatePronunciationDictionaries("21m00Tcm4TlvDq8ikWAM", {
     *         pronunciation_dictionary_locators: [{
     *                 pronunciation_dictionary_id: "pronunciation_dictionary_id",
     *                 version_id: "version_id"
     *             }]
     *     })
     */ updatePronunciationDictionaries(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/pronunciation-dictionaries`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/pronunciation-dictionaries.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Projects = Projects;
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Chapters = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class Chapters {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Returns a list of a Studio project's chapters.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.getAll("21m00Tcm4TlvDq8ikWAM")
     */ getAll(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Creates a new chapter either as blank or from a URL.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.studio.BodyCreateChapterV1StudioProjectsProjectIdChaptersPost} request
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.create("21m00Tcm4TlvDq8ikWAM", {
     *         name: "name"
     *     })
     */ create(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns information about a specific chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.get("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ get(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {ElevenLabs.studio.BodyUpdateChapterV1StudioProjectsProjectIdChaptersChapterIdPost} request
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.edit("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ edit(projectId_1, chapterId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, chapterId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.delete("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ delete(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/studio/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Starts conversion of a specific chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.convert("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ convert(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/convert`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}/convert.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets information about all the snapshots of a chapter, each snapshot corresponds can be downloaded as audio. Whenever a chapter is converted a snapshot will be automatically created.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.getAllSnapshots("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ getAllSnapshots(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {string} chapterSnapshotId - The ID of the chapter snapshot.
     * @param {ElevenLabs.studio.BodyStreamChapterAudioV1StudioProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost} request
     * @param {Chapters.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.chapters.streamSnapshot("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ streamSnapshot(projectId_1, chapterId_1, chapterSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, chapterId, chapterSnapshotId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/studio/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots/${encodeURIComponent(chapterSnapshotId)}/stream`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Chapters = Chapters;
}}),
"[project]/node_modules/elevenlabs/api/resources/studio/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Studio = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
const Client_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/projects/client/Client.js [app-rsc] (ecmascript)");
const Client_2 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/resources/chapters/client/Client.js [app-rsc] (ecmascript)");
class Studio {
    constructor(_options = {}){
        this._options = _options;
    }
    get projects() {
        var _a;
        return (_a = this._projects) !== null && _a !== void 0 ? _a : this._projects = new Client_1.Projects(this._options);
    }
    get chapters() {
        var _a;
        return (_a = this._chapters) !== null && _a !== void 0 ? _a : this._chapters = new Client_2.Chapters(this._options);
    }
    /**
     * Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.
     *
     * @param {ElevenLabs.BodyCreatePodcastV1StudioPodcastsPost} request
     * @param {Studio.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.studio.createPodcast({
     *         model_id: "model_id",
     *         mode: {
     *             type: "conversation",
     *             conversation: {
     *                 host_voice_id: "host_voice_id",
     *                 guest_voice_id: "guest_voice_id"
     *             }
     *         },
     *         source: {
     *             text: "text"
     *         }
     *     })
     */ createPodcast(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/studio/podcasts"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/studio/podcasts.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Studio = Studio;
}}),
"[project]/node_modules/elevenlabs/api/resources/projects/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Projects = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
/**
 * Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team.
 */ class Projects {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.
     *
     * @param {ElevenLabs.BodyCreatePodcastV1ProjectsPodcastCreatePost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.createPodcast({
     *         model_id: "model_id",
     *         mode: {
     *             type: "conversation",
     *             conversation: {
     *                 host_voice_id: "host_voice_id",
     *                 guest_voice_id: "guest_voice_id"
     *             }
     *         },
     *         source: {
     *             text: "text"
     *         }
     *     })
     */ createPodcast(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/projects/podcast/create"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/podcast/create.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns a list of your projects together and its metadata.
     *
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.getProjects()
     */ getProjects(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/projects"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Creates a new project, it can be either initialized as blank, from a document or from a URL.
     *
     * @param {ElevenLabs.BodyAddProjectV1ProjectsAddPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.addProject({
     *         name: "name",
     *         default_title_voice_id: "default_title_voice_id",
     *         default_paragraph_voice_id: "default_paragraph_voice_id",
     *         default_model_id: "default_model_id"
     *     })
     */ addProject(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            _request.append("default_title_voice_id", request.default_title_voice_id);
            _request.append("default_paragraph_voice_id", request.default_paragraph_voice_id);
            _request.append("default_model_id", request.default_model_id);
            if (request.from_url != null) {
                _request.append("from_url", request.from_url);
            }
            if (request.from_document != null) {
                yield _request.appendFile("from_document", request.from_document);
            }
            if (request.quality_preset != null) {
                _request.append("quality_preset", request.quality_preset);
            }
            if (request.title != null) {
                _request.append("title", request.title);
            }
            if (request.author != null) {
                _request.append("author", request.author);
            }
            if (request.description != null) {
                _request.append("description", request.description);
            }
            if (request.genres != null) {
                for (const _item of request.genres){
                    _request.append("genres", _item);
                }
            }
            if (request.target_audience != null) {
                _request.append("target_audience", request.target_audience);
            }
            if (request.language != null) {
                _request.append("language", request.language);
            }
            if (request.content_type != null) {
                _request.append("content_type", request.content_type);
            }
            if (request.original_publication_date != null) {
                _request.append("original_publication_date", request.original_publication_date);
            }
            if (request.mature_content != null) {
                _request.append("mature_content", request.mature_content.toString());
            }
            if (request.isbn_number != null) {
                _request.append("isbn_number", request.isbn_number);
            }
            if (request.acx_volume_normalization != null) {
                _request.append("acx_volume_normalization", request.acx_volume_normalization.toString());
            }
            if (request.volume_normalization != null) {
                _request.append("volume_normalization", request.volume_normalization.toString());
            }
            if (request.pronunciation_dictionary_locators != null) {
                for (const _item of request.pronunciation_dictionary_locators){
                    _request.append("pronunciation_dictionary_locators", _item);
                }
            }
            if (request.fiction != null) {
                _request.append("fiction", request.fiction);
            }
            if (request.quality_check_on != null) {
                _request.append("quality_check_on", request.quality_check_on.toString());
            }
            if (request.apply_text_normalization != null) {
                _request.append("apply_text_normalization", request.apply_text_normalization);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            if (request.auto_assign_voices != null) {
                _request.append("auto_assign_voices", request.auto_assign_voices.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/projects/add"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/add.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns information about a specific project. This endpoint returns more detailed information about a project than `GET /v1/projects`.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.getProjectById("21m00Tcm4TlvDq8ikWAM")
     */ getProjectById(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Edits basic project info.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.BodyEditBasicProjectInfoV1ProjectsProjectIdPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.editBasicProjectInfo("21m00Tcm4TlvDq8ikWAM", {
     *         name: "name",
     *         default_title_voice_id: "default_title_voice_id",
     *         default_paragraph_voice_id: "default_paragraph_voice_id"
     *     })
     */ editBasicProjectInfo(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a project.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.deleteProject("21m00Tcm4TlvDq8ikWAM")
     */ deleteProject(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/projects/{project_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Edits project content.
     *
     * @param {string} projectId
     * @param {ElevenLabs.BodyEditProjectContentV1ProjectsProjectIdContentPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.editProjectContent("21m00Tcm4TlvDq8ikWAM", {})
     */ editProjectContent(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.from_url != null) {
                _request.append("from_url", request.from_url);
            }
            if (request.from_document != null) {
                yield _request.appendFile("from_document", request.from_document);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/content`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/content.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Starts conversion of a project and all of its chapters.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.convertProject("21m00Tcm4TlvDq8ikWAM")
     */ convertProject(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/convert`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/convert.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets the snapshots of a project.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.getProjectSnapshots("21m00Tcm4TlvDq8ikWAM")
     */ getProjectSnapshots(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/snapshots`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects/{project_id}/snapshots.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Stream the audio from a project snapshot.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ streamProjectAudio(projectId_1, projectSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, projectSnapshotId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/stream`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/snapshots/{project_snapshot_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Streams archive with project audio.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} projectSnapshotId - The ID of the Studio project snapshot.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.streamsArchiveWithProjectAudio("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ streamsArchiveWithProjectAudio(projectId, projectSnapshotId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/snapshots/${encodeURIComponent(projectSnapshotId)}/archive`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/snapshots/{project_snapshot_id}/archive.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns a list of your chapters for a project together and its metadata.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.getChapters("21m00Tcm4TlvDq8ikWAM")
     */ getChapters(projectId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects/{project_id}/chapters.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns information about a specific chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.getChapterById("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ getChapterById(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.deleteChapter("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ deleteChapter(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Edits a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {ElevenLabs.BodyEditChapterV1ProjectsProjectIdChaptersChapterIdPatch} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.editChapter("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ editChapter(projectId_1, chapterId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, chapterId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}`),
                method: "PATCH",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/projects/{project_id}/chapters/{chapter_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Creates a new chapter either as blank or from a URL.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.addChapterToAProject("21m00Tcm4TlvDq8ikWAM", {
     *         name: "name"
     *     })
     */ addChapterToAProject(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/add`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/chapters/add.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Starts conversion of a specific chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.convertChapter("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ convertChapter(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/convert`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/chapters/{chapter_id}/convert.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Gets information about all the snapshots of a chapter, each snapshot corresponds can be downloaded as audio. Whenever a chapter is converted a snapshot will be automatically created.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.listChapterSnapshots("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ listChapterSnapshots(projectId, chapterId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Stream the audio from a chapter snapshot. Use `GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the chapter snapshots of a chapter.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {string} chapterId - The ID of the chapter.
     * @param {string} chapterSnapshotId - The ID of the chapter snapshot.
     * @param {ElevenLabs.BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.streamChapterAudio("21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM", "21m00Tcm4TlvDq8ikWAM")
     */ streamChapterAudio(projectId_1, chapterId_1, chapterSnapshotId_1) {
        return __awaiter(this, arguments, void 0, function*(projectId, chapterId, chapterSnapshotId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/chapters/${encodeURIComponent(chapterId)}/snapshots/${encodeURIComponent(chapterSnapshotId)}/stream`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates the set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.
     *
     * @param {string} projectId - The ID of the Studio project.
     * @param {ElevenLabs.UpdatePronunciationDictionariesRequest} request
     * @param {Projects.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.projects.updatePronunciationDictionaries("21m00Tcm4TlvDq8ikWAM", {
     *         pronunciation_dictionary_locators: [{
     *                 pronunciation_dictionary_id: "pronunciation_dictionary_id",
     *                 version_id: "version_id"
     *             }]
     *     })
     */ updatePronunciationDictionaries(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/projects/${encodeURIComponent(projectId)}/update-pronunciation-dictionaries`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/projects/{project_id}/update-pronunciation-dictionaries.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Projects = Projects;
}}),
"[project]/node_modules/elevenlabs/api/resources/dubbing/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Dubbing = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class Dubbing {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Dubs provided audio or video file into given language.
     *
     * @param {ElevenLabs.BodyDubAVideoOrAnAudioFileV1DubbingPost} request
     * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.dubbing.dubAVideoOrAnAudioFile({
     *         target_lang: "target_lang"
     *     })
     */ dubAVideoOrAnAudioFile(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.name != null) {
                _request.append("name", request.name);
            }
            if (request.source_url != null) {
                _request.append("source_url", request.source_url);
            }
            if (request.source_lang != null) {
                _request.append("source_lang", request.source_lang);
            }
            _request.append("target_lang", request.target_lang);
            if (request.num_speakers != null) {
                _request.append("num_speakers", request.num_speakers.toString());
            }
            if (request.watermark != null) {
                _request.append("watermark", request.watermark.toString());
            }
            if (request.start_time != null) {
                _request.append("start_time", request.start_time.toString());
            }
            if (request.end_time != null) {
                _request.append("end_time", request.end_time.toString());
            }
            if (request.highest_resolution != null) {
                _request.append("highest_resolution", request.highest_resolution.toString());
            }
            if (request.drop_background_audio != null) {
                _request.append("drop_background_audio", request.drop_background_audio.toString());
            }
            if (request.use_profanity_filter != null) {
                _request.append("use_profanity_filter", request.use_profanity_filter.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/dubbing"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/dubbing.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns metadata about a dubbing project, including whether it's still in progress or not
     *
     * @param {string} dubbingId - ID of the dubbing project.
     * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.dubbing.getDubbingProjectMetadata("dubbing_id")
     */ getDubbingProjectMetadata(dubbingId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/dubbing/${encodeURIComponent(dubbingId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Deletes a dubbing project.
     *
     * @param {string} dubbingId - ID of the dubbing project.
     * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.dubbing.deleteDubbingProject("dubbing_id")
     */ deleteDubbingProject(dubbingId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/dubbing/${encodeURIComponent(dubbingId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/dubbing/{dubbing_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns dubbed file as a streamed file. Videos will be returned in MP4 format and audio only dubs will be returned in MP3.
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */ getDubbedFile(dubbingId, languageCode, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/dubbing/${encodeURIComponent(dubbingId)}/audio/${encodeURIComponent(languageCode)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                responseType: "streaming",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}/audio/{language_code}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns transcript for the dub as an SRT file.
     *
     * @param {string} dubbingId - ID of the dubbing project.
     * @param {string} languageCode - ID of the language.
     * @param {ElevenLabs.DubbingGetTranscriptForDubRequest} request
     * @param {Dubbing.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.dubbing.getTranscriptForDub("dubbing_id", "language_code")
     */ getTranscriptForDub(dubbingId_1, languageCode_1) {
        return __awaiter(this, arguments, void 0, function*(dubbingId, languageCode, request = {}, requestOptions) {
            var _a, _b;
            const { format_type: formatType } = request;
            const _queryParams = {};
            if (formatType != null) {
                _queryParams["format_type"] = formatType;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/dubbing/${encodeURIComponent(dubbingId)}/transcript/${encodeURIComponent(languageCode)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/dubbing/{dubbing_id}/transcript/{language_code}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Dubbing = Dubbing;
}}),
"[project]/node_modules/elevenlabs/api/resources/models/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Models = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
/**
 * Access the different models of the platform.
 */ class Models {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Gets a list of available models.
     *
     * @param {Models.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.models.getAll()
     */ getAll(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/models"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/models.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Models = Models;
}}),
"[project]/node_modules/elevenlabs/api/resources/audioNative/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AudioNative = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class AudioNative {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Creates AudioNative enabled project, optionally starts conversion and returns project id and embeddable html snippet.
     *
     * @param {ElevenLabs.BodyCreatesAudioNativeEnabledProjectV1AudioNativePost} request
     * @param {AudioNative.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.audioNative.create({
     *         name: "name"
     *     })
     */ create(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            if (request.image != null) {
                _request.append("image", request.image);
            }
            if (request.author != null) {
                _request.append("author", request.author);
            }
            if (request.title != null) {
                _request.append("title", request.title);
            }
            if (request.small != null) {
                _request.append("small", request.small.toString());
            }
            if (request.text_color != null) {
                _request.append("text_color", request.text_color);
            }
            if (request.background_color != null) {
                _request.append("background_color", request.background_color);
            }
            if (request.sessionization != null) {
                _request.append("sessionization", request.sessionization.toString());
            }
            if (request.voice_id != null) {
                _request.append("voice_id", request.voice_id);
            }
            if (request.model_id != null) {
                _request.append("model_id", request.model_id);
            }
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/audio-native"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-native.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates content for the specific AudioNative Project.
     *
     * @param {string} projectId
     * @param {ElevenLabs.BodyUpdateAudioNativeProjectContentV1AudioNativeProjectIdContentPost} request
     * @param {AudioNative.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.audioNative.updateContent("21m00Tcm4TlvDq8ikWAM", {})
     */ updateContent(projectId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.auto_convert != null) {
                _request.append("auto_convert", request.auto_convert.toString());
            }
            if (request.auto_publish != null) {
                _request.append("auto_publish", request.auto_publish.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/audio-native/${encodeURIComponent(projectId)}/content`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/audio-native/{project_id}/content.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.AudioNative = AudioNative;
}}),
"[project]/node_modules/elevenlabs/api/resources/usage/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Usage = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class Usage {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Returns the credit usage metrics for the current user or the entire workspace they are part of. The response will return a time axis with unix timestamps for each day and daily usage along that axis. The usage will be broken down by the specified breakdown type. For example, breakdown type "voice" will return the usage of each voice along the time axis.
     *
     * @param {ElevenLabs.UsageGetCharactersUsageMetricsRequest} request
     * @param {Usage.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.usage.getCharactersUsageMetrics({
     *         start_unix: 1,
     *         end_unix: 1
     *     })
     */ getCharactersUsageMetrics(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { start_unix: startUnix, end_unix: endUnix, include_workspace_metrics: includeWorkspaceMetrics, breakdown_type: breakdownType } = request;
            const _queryParams = {};
            _queryParams["start_unix"] = startUnix.toString();
            _queryParams["end_unix"] = endUnix.toString();
            if (includeWorkspaceMetrics != null) {
                _queryParams["include_workspace_metrics"] = includeWorkspaceMetrics.toString();
            }
            if (breakdownType != null) {
                _queryParams["breakdown_type"] = breakdownType;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/usage/character-stats"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/usage/character-stats.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Usage = Usage;
}}),
"[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PronunciationDictionary = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class PronunciationDictionary {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Creates a new pronunciation dictionary from a lexicon .PLS file
     *
     * @param {ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost} request
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.addFromFile({
     *         name: "name"
     *     })
     */ addFromFile(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("name", request.name);
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.description != null) {
                _request.append("description", request.description);
            }
            if (request.workspace_access != null) {
                _request.append("workspace_access", request.workspace_access);
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/pronunciation-dictionaries/add-from-file"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/add-from-file.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Add rules to the pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {ElevenLabs.PronunciationDictionary} request
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.addRules("21m00Tcm4TlvDq8ikWAM", {
     *         rules: [{
     *                 type: "alias",
     *                 string_to_replace: "string_to_replace",
     *                 alias: "alias"
     *             }]
     *     })
     */ addRules(pronunciationDictionaryId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/add-rules`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Remove rules from the pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {ElevenLabs.BodyRemoveRulesFromThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdRemoveRulesPost} request
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.removeRules("21m00Tcm4TlvDq8ikWAM", {
     *         rule_strings: ["rule_strings"]
     *     })
     */ removeRules(pronunciationDictionaryId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/remove-rules`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get PLS file with a pronunciation dictionary version rules
     *
     * @param {string} dictionaryId - The id of the pronunciation dictionary
     * @param {string} versionId - The id of the version of the pronunciation dictionary
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.download("Fm6AvNgS53NXe6Kqxp3e", "KZFyRUq3R6kaqhKI146w")
     */ download(dictionaryId, versionId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/pronunciation-dictionaries/${encodeURIComponent(dictionaryId)}/${encodeURIComponent(versionId)}/download`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                responseType: "text",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get metadata for a pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.get("Fm6AvNgS53NXe6Kqxp3e")
     */ get(pronunciationDictionaryId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/pronunciation-dictionaries/${encodeURIComponent(pronunciationDictionaryId)}/`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get a list of the pronunciation dictionaries you have access to and their metadata
     *
     * @param {ElevenLabs.PronunciationDictionaryGetAllRequest} request
     * @param {PronunciationDictionary.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionary.getAll({
     *         page_size: 1
     *     })
     */ getAll() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { cursor, page_size: pageSize } = request;
            const _queryParams = {};
            if (cursor != null) {
                _queryParams["cursor"] = cursor;
            }
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/pronunciation-dictionaries/"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/pronunciation-dictionaries/.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.PronunciationDictionary = PronunciationDictionary;
}}),
"[project]/node_modules/elevenlabs/api/resources/workspace/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Workspace = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class Workspace {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Searches for user groups in the workspace. Multiple or no groups may be returned.
     *
     * @param {ElevenLabs.SearchUserGroupsV1WorkspaceGroupsSearchGetRequest} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.searchUserGroups({
     *         name: "name"
     *     })
     */ searchUserGroups(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { name } = request;
            const _queryParams = {};
            _queryParams["name"] = name;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/workspace/groups/search"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/workspace/groups/search.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Removes a member from the specified group. This endpoint may only be called by workspace administrators.
     *
     * @param {string} groupId - The ID of the target group.
     * @param {ElevenLabs.BodyDeleteMemberFromUserGroupV1WorkspaceGroupsGroupIdMembersRemovePost} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.deleteMemberFromUserGroup("group_id", {
     *         email: "email"
     *     })
     */ deleteMemberFromUserGroup(groupId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/workspace/groups/${encodeURIComponent(groupId)}/members/remove`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/groups/{group_id}/members/remove.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.
     *
     * @param {string} groupId - The ID of the target group.
     * @param {ElevenLabs.BodyAddMemberToUserGroupV1WorkspaceGroupsGroupIdMembersPost} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.addMemberToUserGroup("group_id", {
     *         email: "email"
     *     })
     */ addMemberToUserGroup(groupId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/workspace/groups/${encodeURIComponent(groupId)}/members`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/groups/{group_id}/members.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.
     *
     * @param {ElevenLabs.BodyInviteUserV1WorkspaceInvitesAddPost} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.inviteUser({
     *         email: "email"
     *     })
     */ inviteUser(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/workspace/invites/add"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/invites/add.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.
     *
     * @param {ElevenLabs.BodyInviteMultipleUsersV1WorkspaceInvitesAddBulkPost} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.inviteMultipleUsers({
     *         emails: ["emails"]
     *     })
     */ inviteMultipleUsers(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/workspace/invites/add-bulk"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/invites/add-bulk.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.
     *
     * @param {ElevenLabs.BodyDeleteExistingInvitationV1WorkspaceInvitesDelete} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.deleteExistingInvitation({
     *         email: "email"
     *     })
     */ deleteExistingInvitation(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/workspace/invites"),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/workspace/invites.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.
     *
     * @param {ElevenLabs.BodyUpdateMemberV1WorkspaceMembersPost} request
     * @param {Workspace.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.workspace.updateMember({
     *         email: "email"
     *     })
     */ updateMember(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/workspace/members"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/workspace/members.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.Workspace = Workspace;
}}),
"[project]/node_modules/elevenlabs/api/resources/speechToText/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SpeechToText = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class SpeechToText {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Transcribe an audio or video file.
     *
     * @param {ElevenLabs.BodySpeechToTextV1SpeechToTextPost} request
     * @param {SpeechToText.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.speechToText.convert({
     *         model_id: "model_id"
     *     })
     */ convert(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("model_id", request.model_id);
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.language_code != null) {
                _request.append("language_code", request.language_code);
            }
            if (request.tag_audio_events != null) {
                _request.append("tag_audio_events", request.tag_audio_events.toString());
            }
            if (request.num_speakers != null) {
                _request.append("num_speakers", request.num_speakers.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/speech-to-text"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-text.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Transcribe an audio or video file with streaming response. Returns chunks of transcription as they become available, with each chunk separated by double newlines (\n\n).
     */ convertAsStream(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            _request.append("model_id", request.model_id);
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            if (request.language_code != null) {
                _request.append("language_code", request.language_code);
            }
            if (request.tag_audio_events != null) {
                _request.append("tag_audio_events", request.tag_audio_events.toString());
            }
            if (request.num_speakers != null) {
                _request.append("num_speakers", request.num_speakers.toString());
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/speech-to-text/stream"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                responseType: "sse",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return new core.Stream({
                    stream: _response.body,
                    parse: (data)=>data,
                    signal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal,
                    eventShape: {
                        type: "json",
                        messageTerminator: "\n"
                    }
                });
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 400:
                        throw new ElevenLabs.BadRequestError(_response.error.body);
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/speech-to-text/stream.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.SpeechToText = SpeechToText;
}}),
"[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = this && this.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConversationalAi = void 0;
const environments = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)"));
const core = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/core/index.js [app-rsc] (ecmascript)"));
const ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
const url_join_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/url-join/lib/url-join.js [app-rsc] (ecmascript)"));
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class ConversationalAi {
    constructor(_options = {}){
        this._options = _options;
    }
    /**
     * Get a signed url to start a conversation with an agent with an agent that requires authorization
     *
     * @param {ElevenLabs.ConversationalAiGetSignedUrlRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getSignedUrl({
     *         agent_id: "21m00Tcm4TlvDq8ikWAM"
     *     })
     */ getSignedUrl(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { agent_id: agentId } = request;
            const _queryParams = {};
            _queryParams["agent_id"] = agentId;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/conversation/get_signed_url"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversation/get_signed_url.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Create an agent from a config object
     *
     * @param {ElevenLabs.BodyCreateAgentV1ConvaiAgentsCreatePost} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.createAgent({
     *         conversation_config: {}
     *     })
     */ createAgent(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const { use_tool_ids: useToolIds } = request, _body = __rest(request, [
                "use_tool_ids"
            ]);
            const _queryParams = {};
            if (useToolIds != null) {
                _queryParams["use_tool_ids"] = useToolIds.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/agents/create"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/create.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Retrieve config for an agent
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getAgent("21m00Tcm4TlvDq8ikWAM")
     */ getAgent(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete an agent
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.deleteAgent("21m00Tcm4TlvDq8ikWAM")
     */ deleteAgent(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/agents/{agent_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Patches an Agent settings
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ElevenLabs.BodyPatchesAnAgentSettingsV1ConvaiAgentsAgentIdPatch} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.updateAgent("21m00Tcm4TlvDq8ikWAM")
     */ updateAgent(agentId_1) {
        return __awaiter(this, arguments, void 0, function*(agentId, request = {}, requestOptions) {
            var _a, _b;
            const { use_tool_ids: useToolIds } = request, _body = __rest(request, [
                "use_tool_ids"
            ]);
            const _queryParams = {};
            if (useToolIds != null) {
                _queryParams["use_tool_ids"] = useToolIds.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}`),
                method: "PATCH",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/agents/{agent_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Retrieve the widget configuration for an agent
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ElevenLabs.ConversationalAiGetAgentWidgetRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getAgentWidget("21m00Tcm4TlvDq8ikWAM")
     */ getAgentWidget(agentId_1) {
        return __awaiter(this, arguments, void 0, function*(agentId, request = {}, requestOptions) {
            var _a, _b;
            const { conversation_signature: conversationSignature } = request;
            const _queryParams = {};
            if (conversationSignature != null) {
                _queryParams["conversation_signature"] = conversationSignature;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}/widget`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}/widget.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get the current link used to share the agent with others
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getAgentLink("21m00Tcm4TlvDq8ikWAM")
     */ getAgentLink(agentId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}/link`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents/{agent_id}/link.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Sets the avatar for an agent displayed in the widget
     *
     * @param {string} agentId
     * @param {ElevenLabs.BodyPostAgentAvatarV1ConvaiAgentsAgentIdAvatarPost} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.postAgentAvatar("21m00Tcm4TlvDq8ikWAM", {
     *         avatar_file: fs.createReadStream("/path/to/your/file")
     *     })
     */ postAgentAvatar(agentId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            yield _request.appendFile("avatar_file", request.avatar_file);
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}/avatar`),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/{agent_id}/avatar.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Uploads a file or reference a webpage for the agent to use as part of it's knowledge base
     *
     * @param {string} agentId - The id of an agent. This is returned on agent creation.
     * @param {ElevenLabs.BodyAddASecretToTheAgentWhichCanBeReferencedInToolCallsV1ConvaiAgentsAgentIdAddSecretPost} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.addAgentSecret("21m00Tcm4TlvDq8ikWAM", {
     *         name: "name",
     *         secret_value: "secret_value"
     *     })
     */ addAgentSecret(agentId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/agents/${encodeURIComponent(agentId)}/add-secret`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/agents/{agent_id}/add-secret.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Returns a page of your agents and their metadata.
     *
     * @param {ElevenLabs.ConversationalAiGetAgentsRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getAgents()
     */ getAgents() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { cursor, page_size: pageSize, search } = request;
            const _queryParams = {};
            if (cursor != null) {
                _queryParams["cursor"] = cursor;
            }
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            if (search != null) {
                _queryParams["search"] = search;
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/agents"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/agents.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get all conversations of agents that user owns. With option to restrict to a specific agent.
     *
     * @param {ElevenLabs.ConversationalAiGetConversationsRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getConversations({
     *         agent_id: "21m00Tcm4TlvDq8ikWAM"
     *     })
     */ getConversations() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { cursor, agent_id: agentId, call_successful: callSuccessful, page_size: pageSize } = request;
            const _queryParams = {};
            if (cursor != null) {
                _queryParams["cursor"] = cursor;
            }
            if (agentId != null) {
                _queryParams["agent_id"] = agentId;
            }
            if (callSuccessful != null) {
                _queryParams["call_successful"] = callSuccessful;
            }
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/conversations"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get the details of a particular conversation
     *
     * @param {string} conversationId - The id of the conversation you're taking the action on.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getConversation("21m00Tcm4TlvDq8ikWAM")
     */ getConversation(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/conversations/${encodeURIComponent(conversationId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations/{conversation_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete a particular conversation
     *
     * @param {string} conversationId - The id of the conversation you're taking the action on.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.deleteConversation("21m00Tcm4TlvDq8ikWAM")
     */ deleteConversation(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/conversations/${encodeURIComponent(conversationId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/conversations/{conversation_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get the audio recording of a particular conversation
     *
     * @param {string} conversationId - The id of the conversation you're taking the action on.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getConversationAudio("21m00Tcm4TlvDq8ikWAM")
     */ getConversationAudio(conversationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/conversations/${encodeURIComponent(conversationId)}/audio`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/conversations/{conversation_id}/audio.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Send the feedback for the given conversation
     *
     * @param {string} conversationId - The id of the conversation you're taking the action on.
     * @param {ElevenLabs.BodySendConversationFeedbackV1ConvaiConversationsConversationIdFeedbackPost} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.postConversationFeedback("21m00Tcm4TlvDq8ikWAM", {
     *         feedback: "like"
     *     })
     */ postConversationFeedback(conversationId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/conversations/${encodeURIComponent(conversationId)}/feedback`),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/conversations/{conversation_id}/feedback.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Import Phone Number from Twilio configuration
     *
     * @param {ElevenLabs.CreatePhoneNumberRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.createPhoneNumber({
     *         phone_number: "phone_number",
     *         provider: "twilio",
     *         label: "label",
     *         sid: "sid",
     *         token: "token"
     *     })
     */ createPhoneNumber(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/phone-numbers/create"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: Object.assign(Object.assign({}, request), {
                    provider: "twilio"
                }),
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/phone-numbers/create.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Retrieve Phone Number details by ID
     *
     * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getPhoneNumber("TeaqRRdTcIfIu2i7BYfT")
     */ getPhoneNumber(phoneNumberId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/phone-numbers/{phone_number_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete Phone Number by ID
     *
     * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.deletePhoneNumber("TeaqRRdTcIfIu2i7BYfT")
     */ deletePhoneNumber(phoneNumberId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/phone-numbers/{phone_number_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Update Phone Number details by ID
     *
     * @param {string} phoneNumberId - The id of an agent. This is returned on agent creation.
     * @param {ElevenLabs.UpdatePhoneNumberRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.updatePhoneNumber("TeaqRRdTcIfIu2i7BYfT")
     */ updatePhoneNumber(phoneNumberId_1) {
        return __awaiter(this, arguments, void 0, function*(phoneNumberId, request = {}, requestOptions) {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/phone-numbers/${encodeURIComponent(phoneNumberId)}`),
                method: "PATCH",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/phone-numbers/{phone_number_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Retrieve all Phone Numbers
     *
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getPhoneNumbers()
     */ getPhoneNumbers(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/phone-numbers/"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/phone-numbers/.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get a list of available knowledge base documents
     *
     * @param {ElevenLabs.ConversationalAiGetKnowledgeBaseListRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getKnowledgeBaseList()
     */ getKnowledgeBaseList() {
        return __awaiter(this, arguments, void 0, function*(request = {}, requestOptions) {
            var _a, _b;
            const { cursor, page_size: pageSize } = request;
            const _queryParams = {};
            if (cursor != null) {
                _queryParams["cursor"] = cursor;
            }
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/knowledge-base"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Uploads a file or reference a webpage to use as part of the shared knowledge base
     *
     * @param {ElevenLabs.BodyAddToKnowledgeBaseV1ConvaiKnowledgeBasePost} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.addToKnowledgeBase({})
     */ addToKnowledgeBase(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _request = yield core.newFormData();
            if (request.url != null) {
                _request.append("url", request.url);
            }
            if (request.file != null) {
                yield _request.appendFile("file", request.file);
            }
            const _maybeEncodedRequest = yield _request.getRequest();
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/knowledge-base"),
                method: "POST",
                headers: Object.assign(Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, _maybeEncodedRequest.headers), requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                requestType: "file",
                duplex: _maybeEncodedRequest.duplex,
                body: _maybeEncodedRequest.body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/knowledge-base.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get details about a specific documentation making up the agent's knowledge base
     *
     * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getKnowledgeBaseDocumentById("21m00Tcm4TlvDq8ikWAM")
     */ getKnowledgeBaseDocumentById(documentationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete a document from the knowledge base
     *
     * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.deleteKnowledgeBaseDocument("21m00Tcm4TlvDq8ikWAM")
     */ deleteKnowledgeBaseDocument(documentationId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/knowledge-base/{documentation_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get a list of agents depending on this knowledge base document
     *
     * @param {string} documentationId - The id of a document from the knowledge base. This is returned on document addition.
     * @param {ElevenLabs.ConversationalAiGetDependentAgentsRequest} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getDependentAgents("21m00Tcm4TlvDq8ikWAM")
     */ getDependentAgents(documentationId_1) {
        return __awaiter(this, arguments, void 0, function*(documentationId, request = {}, requestOptions) {
            var _a, _b;
            const { cursor, page_size: pageSize } = request;
            const _queryParams = {};
            if (cursor != null) {
                _queryParams["cursor"] = cursor;
            }
            if (pageSize != null) {
                _queryParams["page_size"] = pageSize.toString();
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/knowledge-base/${encodeURIComponent(documentationId)}/dependent-agents`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                queryParameters: _queryParams,
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/knowledge-base/{documentation_id}/dependent-agents.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get all available tools available in the workspace.
     *
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getTools()
     */ getTools(requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/tools"),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/tools.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Add a new tool to the available tools in the workspace.
     *
     * @param {ElevenLabs.ToolRequestModel} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.addTool({
     *         tool_config: {
     *             type: "webhook",
     *             name: "name",
     *             description: "description",
     *             api_schema: {
     *                 url: "url"
     *             }
     *         }
     *     })
     */ addTool(request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, "v1/convai/tools"),
                method: "POST",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling POST /v1/convai/tools.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Get tool that is available in the workspace.
     *
     * @param {string} toolId - ID of the requested tool.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.getTool("tool_id")
     */ getTool(toolId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/tools/${encodeURIComponent(toolId)}`),
                method: "GET",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling GET /v1/convai/tools/{tool_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Delete tool from the workspace.
     *
     * @param {string} toolId - ID of the requested tool.
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.removeTool("tool_id")
     */ removeTool(toolId, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/tools/${encodeURIComponent(toolId)}`),
                method: "DELETE",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling DELETE /v1/convai/tools/{tool_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
    /**
     * Update tool that is available in the workspace.
     *
     * @param {string} toolId - ID of the requested tool.
     * @param {ElevenLabs.ToolRequestModel} request
     * @param {ConversationalAi.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.conversationalAi.updateTool("tool_id", {
     *         tool_config: {
     *             type: "webhook",
     *             name: "name",
     *             description: "description",
     *             api_schema: {
     *                 url: "url"
     *             }
     *         }
     *     })
     */ updateTool(toolId, request, requestOptions) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_b = (_a = yield core.Supplier.get(this._options.baseUrl)) !== null && _a !== void 0 ? _a : yield core.Supplier.get(this._options.environment)) !== null && _b !== void 0 ? _b : environments.ElevenLabsEnvironment.Production, `v1/convai/tools/${encodeURIComponent(toolId)}`),
                method: "PATCH",
                headers: Object.assign({
                    "xi-api-key": (yield core.Supplier.get(this._options.apiKey)) != null ? yield core.Supplier.get(this._options.apiKey) : undefined,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "elevenlabs",
                    "X-Fern-SDK-Version": "1.51.0",
                    "User-Agent": "elevenlabs/1.51.0",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version
                }, requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.headers),
                contentType: "application/json",
                requestType: "json",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
                maxRetries: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.maxRetries,
                abortSignal: requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === "status-code") {
                switch(_response.error.statusCode){
                    case 422:
                        throw new ElevenLabs.UnprocessableEntityError(_response.error.body);
                    default:
                        throw new errors.ElevenLabsError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body
                        });
                }
            }
            switch(_response.error.reason){
                case "non-json":
                    throw new errors.ElevenLabsError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody
                    });
                case "timeout":
                    throw new errors.ElevenLabsTimeoutError("Timeout exceeded when calling PATCH /v1/convai/tools/{tool_id}.");
                case "unknown":
                    throw new errors.ElevenLabsError({
                        message: _response.error.errorMessage
                    });
            }
        });
    }
}
exports.ConversationalAi = ConversationalAi;
}}),
"[project]/node_modules/elevenlabs/Client.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsClient = void 0;
const Client_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/history/client/Client.js [app-rsc] (ecmascript)");
const Client_2 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSoundEffects/client/Client.js [app-rsc] (ecmascript)");
const Client_3 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioIsolation/client/Client.js [app-rsc] (ecmascript)");
const Client_4 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/samples/client/Client.js [app-rsc] (ecmascript)");
const Client_5 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToSpeech/client/Client.js [app-rsc] (ecmascript)");
const Client_6 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToSpeech/client/Client.js [app-rsc] (ecmascript)");
const Client_7 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voiceGeneration/client/Client.js [app-rsc] (ecmascript)");
const Client_8 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/textToVoice/client/Client.js [app-rsc] (ecmascript)");
const Client_9 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/user/client/Client.js [app-rsc] (ecmascript)");
const Client_10 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/voices/client/Client.js [app-rsc] (ecmascript)");
const Client_11 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/studio/client/Client.js [app-rsc] (ecmascript)");
const Client_12 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/projects/client/Client.js [app-rsc] (ecmascript)");
const Client_13 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/dubbing/client/Client.js [app-rsc] (ecmascript)");
const Client_14 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/models/client/Client.js [app-rsc] (ecmascript)");
const Client_15 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/audioNative/client/Client.js [app-rsc] (ecmascript)");
const Client_16 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/usage/client/Client.js [app-rsc] (ecmascript)");
const Client_17 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/pronunciationDictionary/client/Client.js [app-rsc] (ecmascript)");
const Client_18 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/workspace/client/Client.js [app-rsc] (ecmascript)");
const Client_19 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/speechToText/client/Client.js [app-rsc] (ecmascript)");
const Client_20 = __turbopack_context__.r("[project]/node_modules/elevenlabs/api/resources/conversationalAi/client/Client.js [app-rsc] (ecmascript)");
class ElevenLabsClient {
    constructor(_options = {}){
        this._options = _options;
    }
    get history() {
        var _a;
        return (_a = this._history) !== null && _a !== void 0 ? _a : this._history = new Client_1.History(this._options);
    }
    get textToSoundEffects() {
        var _a;
        return (_a = this._textToSoundEffects) !== null && _a !== void 0 ? _a : this._textToSoundEffects = new Client_2.TextToSoundEffects(this._options);
    }
    get audioIsolation() {
        var _a;
        return (_a = this._audioIsolation) !== null && _a !== void 0 ? _a : this._audioIsolation = new Client_3.AudioIsolation(this._options);
    }
    get samples() {
        var _a;
        return (_a = this._samples) !== null && _a !== void 0 ? _a : this._samples = new Client_4.Samples(this._options);
    }
    get textToSpeech() {
        var _a;
        return (_a = this._textToSpeech) !== null && _a !== void 0 ? _a : this._textToSpeech = new Client_5.TextToSpeech(this._options);
    }
    get speechToSpeech() {
        var _a;
        return (_a = this._speechToSpeech) !== null && _a !== void 0 ? _a : this._speechToSpeech = new Client_6.SpeechToSpeech(this._options);
    }
    get voiceGeneration() {
        var _a;
        return (_a = this._voiceGeneration) !== null && _a !== void 0 ? _a : this._voiceGeneration = new Client_7.VoiceGeneration(this._options);
    }
    get textToVoice() {
        var _a;
        return (_a = this._textToVoice) !== null && _a !== void 0 ? _a : this._textToVoice = new Client_8.TextToVoice(this._options);
    }
    get user() {
        var _a;
        return (_a = this._user) !== null && _a !== void 0 ? _a : this._user = new Client_9.User(this._options);
    }
    get voices() {
        var _a;
        return (_a = this._voices) !== null && _a !== void 0 ? _a : this._voices = new Client_10.Voices(this._options);
    }
    get studio() {
        var _a;
        return (_a = this._studio) !== null && _a !== void 0 ? _a : this._studio = new Client_11.Studio(this._options);
    }
    get projects() {
        var _a;
        return (_a = this._projects) !== null && _a !== void 0 ? _a : this._projects = new Client_12.Projects(this._options);
    }
    get dubbing() {
        var _a;
        return (_a = this._dubbing) !== null && _a !== void 0 ? _a : this._dubbing = new Client_13.Dubbing(this._options);
    }
    get models() {
        var _a;
        return (_a = this._models) !== null && _a !== void 0 ? _a : this._models = new Client_14.Models(this._options);
    }
    get audioNative() {
        var _a;
        return (_a = this._audioNative) !== null && _a !== void 0 ? _a : this._audioNative = new Client_15.AudioNative(this._options);
    }
    get usage() {
        var _a;
        return (_a = this._usage) !== null && _a !== void 0 ? _a : this._usage = new Client_16.Usage(this._options);
    }
    get pronunciationDictionary() {
        var _a;
        return (_a = this._pronunciationDictionary) !== null && _a !== void 0 ? _a : this._pronunciationDictionary = new Client_17.PronunciationDictionary(this._options);
    }
    get workspace() {
        var _a;
        return (_a = this._workspace) !== null && _a !== void 0 ? _a : this._workspace = new Client_18.Workspace(this._options);
    }
    get speechToText() {
        var _a;
        return (_a = this._speechToText) !== null && _a !== void 0 ? _a : this._speechToText = new Client_19.SpeechToText(this._options);
    }
    get conversationalAi() {
        var _a;
        return (_a = this._conversationalAi) !== null && _a !== void 0 ? _a : this._conversationalAi = new Client_20.ConversationalAi(this._options);
    }
}
exports.ElevenLabsClient = ElevenLabsClient;
}}),
"[project]/node_modules/elevenlabs/wrapper/ElevenLabsClient.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsClient = void 0;
const Client_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/Client.js [app-rsc] (ecmascript)");
const errors = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)"));
class ElevenLabsClient extends Client_1.ElevenLabsClient {
    constructor(options = {}){
        var _a;
        const apiKey = (_a = options.apiKey) !== null && _a !== void 0 ? _a : process.env["ELEVENLABS_API_KEY"];
        if (apiKey == null) {
            throw new errors.ElevenLabsError({
                message: "Please pass in your ElevenLabs API Key or export ELEVENLABS_API_KEY in your environment."
            });
        }
        options.apiKey = apiKey;
        super(options);
    }
    /**
     * Generates audio for a voice.
     *
     * @example Generate the entire audio
     * import { play } from "elevenlabs";
     *
     * const audio = eleven.generate({
     *   voiceId: "Matilda" // defaults to Sarah
     * })
     * await play(audio);
     *
     * @example
     * import { stream } from "elevenlabs"
     *
     * const audioStream = eleven.generate({
     *   stream: true,
     *   voice: "Sarah"
     * })
     * await stream(audioStream);
     */ generate(request_1) {
        return __awaiter(this, arguments, void 0, function*(request, requestOptions = {}) {
            var _a, _b;
            const voiceIdOrName = (_a = request.voice) !== null && _a !== void 0 ? _a : "Sarah";
            const voiceId = isVoiceId(voiceIdOrName) ? voiceIdOrName : (_b = (yield this.voices.getAll({
                show_legacy: true
            })).voices.filter((voice)=>voice.name === voiceIdOrName)[0]) === null || _b === void 0 ? void 0 : _b.voice_id;
            if (voiceId == null) {
                throw new errors.ElevenLabsError({
                    message: `${voiceIdOrName} is not a valid voice name`
                });
            }
            if (isGenerateAudioStream(request)) {
                return yield this.textToSpeech.convertAsStream(voiceId, request, requestOptions);
            } else {
                return yield this.textToSpeech.convert(voiceId, request, requestOptions);
            }
        });
    }
}
exports.ElevenLabsClient = ElevenLabsClient;
function isGenerateAudioStream(value) {
    return value.stream != null;
}
function isVoiceId(val) {
    return /^[a-zA-Z0-9]{20}$/.test(val);
}
}}),
"[project]/node_modules/elevenlabs/wrapper/play.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.play = play;
const command_exists_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/command-exists/index.js [app-rsc] (ecmascript)"));
const ElevenLabsError_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/errors/ElevenLabsError.js [app-rsc] (ecmascript)");
const execa_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/execa/index.js [app-rsc] (ecmascript)"));
function play(audio) {
    return __awaiter(this, void 0, void 0, function*() {
        var _a, audio_1, audio_1_1;
        var _b, e_1, _c, _d;
        var _e, _f;
        if (!(0, command_exists_1.default)("ffplay")) {
            throw new ElevenLabsError_1.ElevenLabsError({
                message: `ffplay from ffmpeg not found, necessary to play audio. 
            On mac you can install it with 'brew install ffmpeg'. 
            On linux and windows you can install it from https://ffmpeg.org/`
            });
        }
        const ffmpeg = (0, execa_1.default)("ffplay", [
            "-autoexit",
            "-",
            "-nodisp"
        ]);
        try {
            for(_a = true, audio_1 = __asyncValues(audio); audio_1_1 = yield audio_1.next(), _b = audio_1_1.done, !_b; _a = true){
                _d = audio_1_1.value;
                _a = false;
                const data = _d;
                (_e = ffmpeg.stdin) === null || _e === void 0 ? void 0 : _e.write(data);
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_a && !_b && (_c = audio_1.return)) yield _c.call(audio_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        (_f = ffmpeg.stdin) === null || _f === void 0 ? void 0 : _f.end();
        yield ffmpeg;
    });
}
}}),
"[project]/node_modules/elevenlabs/wrapper/stream.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __asyncValues = this && this.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    "TURBOPACK unreachable";
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stream = stream;
const command_exists_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/command-exists/index.js [app-rsc] (ecmascript)"));
const ElevenLabsError_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/errors/ElevenLabsError.js [app-rsc] (ecmascript)");
const runtime_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/core/runtime/runtime.js [app-rsc] (ecmascript)");
const execa_1 = __importDefault(__turbopack_context__.r("[project]/node_modules/execa/index.js [app-rsc] (ecmascript)"));
function stream(audio) {
    return __awaiter(this, void 0, void 0, function*() {
        var _a, audio_1, audio_1_1;
        var _b, e_1, _c, _d;
        var _e, _f;
        if (runtime_1.RUNTIME.type !== "node") {
            throw new ElevenLabsError_1.ElevenLabsError({
                message: `This function is only supported in node environments. ${runtime_1.RUNTIME.type} is not supported`
            });
        }
        if (!(0, command_exists_1.default)("mpv")) {
            throw new ElevenLabsError_1.ElevenLabsError({
                message: `mpv not found, necessary to stream audio."
            On mac you can install it with 'brew install mpv'.
            On linux and windows you can install it from https://mpv.io/`
            });
        }
        const mpv = (0, execa_1.default)("mpv", [
            "--no-cache",
            "--no-terminal",
            "--",
            "fd://0"
        ]);
        try {
            for(_a = true, audio_1 = __asyncValues(audio); audio_1_1 = yield audio_1.next(), _b = audio_1_1.done, !_b; _a = true){
                _d = audio_1_1.value;
                _a = false;
                const data = _d;
                (_e = mpv.stdin) === null || _e === void 0 ? void 0 : _e.write(data);
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (!_a && !_b && (_c = audio_1.return)) yield _c.call(audio_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        (_f = mpv.stdin) === null || _f === void 0 ? void 0 : _f.end();
        yield mpv;
    });
}
}}),
"[project]/node_modules/elevenlabs/wrapper/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.stream = exports.play = exports.ElevenLabsClient = void 0;
var ElevenLabsClient_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/wrapper/ElevenLabsClient.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ElevenLabsClient", {
    enumerable: true,
    get: function() {
        return ElevenLabsClient_1.ElevenLabsClient;
    }
});
var play_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/wrapper/play.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "play", {
    enumerable: true,
    get: function() {
        return play_1.play;
    }
});
var stream_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/wrapper/stream.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "stream", {
    enumerable: true,
    get: function() {
        return stream_1.stream;
    }
});
}}),
"[project]/node_modules/elevenlabs/index.js [app-rsc] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function() {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function(o) {
            var ar = [];
            for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) {
            for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
        }
        __setModuleDefault(result, mod);
        return result;
    };
}();
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ElevenLabsTimeoutError = exports.ElevenLabsError = exports.ElevenLabsEnvironment = exports.ElevenLabs = void 0;
exports.ElevenLabs = __importStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/api/index.js [app-rsc] (ecmascript)"));
__exportStar(__turbopack_context__.r("[project]/node_modules/elevenlabs/wrapper/index.js [app-rsc] (ecmascript)"), exports);
var environments_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/environments.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ElevenLabsEnvironment", {
    enumerable: true,
    get: function() {
        return environments_1.ElevenLabsEnvironment;
    }
});
var errors_1 = __turbopack_context__.r("[project]/node_modules/elevenlabs/errors/index.js [app-rsc] (ecmascript)");
Object.defineProperty(exports, "ElevenLabsError", {
    enumerable: true,
    get: function() {
        return errors_1.ElevenLabsError;
    }
});
Object.defineProperty(exports, "ElevenLabsTimeoutError", {
    enumerable: true,
    get: function() {
        return errors_1.ElevenLabsTimeoutError;
    }
});
}}),

};

//# sourceMappingURL=node_modules_elevenlabs_a015382c._.js.map